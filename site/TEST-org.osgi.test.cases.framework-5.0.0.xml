
<testsuite name='test.org.osgi.test.cases.framework' tests='812' time='94.36' failures='1' skipped='0' target='reference:file:/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/org.osgi.test.cases.framework.jar' timestamp='2014-03-13T08:22:30' hostname='Davids-MacBook-Pro.local' framework='org.apache.felix.framework [0]' errors='0' framework-version='4.3.0.SNAPSHOT'>
  <properties>
    <property name='java.vendor' value='Apple Inc.'/>
    <property name='sun.java.launcher' value='SUN_STANDARD'/>
    <property name='sun.management.compiler' value='HotSpot 64-Bit Tiered Compilers'/>
    <property name='os.name' value='Mac OS X'/>
    <property name='sun.boot.class.path' value='/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsfd.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/classes.jar:/System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/Resources/Java/JavaRuntimeSupport.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/ui.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/laf.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/sunrsasign.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jsse.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/jce.jar:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Classes/charsets.jar'/>
    <property name='tester.continuous' value='false'/>
    <property name='report' value='true'/>
    <property name='java.vm.specification.vendor' value='Sun Microsystems Inc.'/>
    <property name='java.runtime.version' value='1.6.0_65-b14-462-11M4609'/>
    <property name='launch.services' value='true'/>
    <property name='launcher.properties' value='/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/launch8137559756828235057.properties'/>
    <property name='user.name' value='David'/>
    <property name='awt.nativeDoubleBuffering' value='true'/>
    <property name='launch.bundles' value='/Users/David/clones/osgi-build_2/licensed/repo/org.apache.servicemix.bundles.bcel/org.apache.servicemix.bundles.bcel-5.2.0.jar,/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/org.osgi.test.cases.framework.jar'/>
    <property name='tester.trace' value='true'/>
    <property name='user.language' value='en'/>
    <property name='sun.boot.library.path' value='/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Libraries'/>
    <property name='org.osgi.framework.system.capabilities.extra' value='osgi.ee; osgi.ee=testOSGiEE, osgi.ee; osgi.ee=AA/BB, osgi.ee; osgi.ee=EE/FF-YY; version:Version=2.0, osgi.ee; osgi.ee=GG-XX/HH; version:Version=1.0, osgi.ee; osgi.ee=II-1.0/JJ-2.0'/>
    <property name='java.version' value='1.6.0_65'/>
    <property name='user.timezone' value='Europe/Dublin'/>
    <property name='tester.dir' value='/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/test-reports'/>
    <property name='sun.arch.data.model' value='64'/>
    <property name='http.nonProxyHosts' value='local|*.local|169.254/16|*.169.254/16'/>
    <property name='java.endorsed.dirs' value='/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/endorsed'/>
    <property name='sun.cpu.isalist' value=''/>
    <property name='sun.jnu.encoding' value='MacRoman'/>
    <property name='file.encoding.pkg' value='sun.io'/>
    <property name='file.separator' value='/'/>
    <property name='java.specification.name' value='Java Platform API Specification'/>
    <property name='java.class.version' value='50.0'/>
    <property name='user.country' value='US'/>
    <property name='java.home' value='/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home'/>
    <property name='java.vm.info' value='mixed mode'/>
    <property name='os.version' value='10.9.2'/>
    <property name='path.separator' value=':'/>
    <property name='java.vm.version' value='20.65-b04-462'/>
    <property name='java.awt.printerjob' value='apple.awt.CPrinterJob'/>
    <property name='sun.io.unicode.encoding' value='UnicodeLittle'/>
    <property name='awt.toolkit' value='apple.awt.CToolkit'/>
    <property name='socksNonProxyHosts' value='local|*.local|169.254/16|*.169.254/16'/>
    <property name='ftp.nonProxyHosts' value='local|*.local|169.254/16|*.169.254/16'/>
    <property name='user.home' value='/Users/David'/>
    <property name='java.specification.vendor' value='Sun Microsystems Inc.'/>
    <property name='java.library.path' value='.:/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java'/>
    <property name='java.vendor.url' value='http://www.apple.com/'/>
    <property name='java.vm.vendor' value='Apple Inc.'/>
    <property name='gopherProxySet' value='false'/>
    <property name='java.runtime.name' value='Java(TM) SE Runtime Environment'/>
    <property name='sun.java.command' value='aQute.launcher.Launcher'/>
    <property name='java.class.path' value='/Users/David/checkouts/felix/framework/target/org.apache.felix.framework-4.3.0-SNAPSHOT.jar:/Users/David/clones/osgi-build_2/licensed/repo/com.springsource.junit/com.springsource.junit-3.8.2.jar:/Users/David/clones/osgi-build_2/cnf/cache/biz.aQute.launcher/biz.aQute.launcher-latest.jar:/Users/David/clones/osgi-build_2/cnf/cache/biz.aQute.junit/biz.aQute.junit-latest.jar'/>
    <property name='launch.name' value='org.osgi.test.cases.framework'/>
    <property name='launch.timeout' value='0'/>
    <property name='launch.storage.dir' value='/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/fw'/>
    <property name='launch.keep' value='false'/>
    <property name='java.vm.specification.name' value='Java Virtual Machine Specification'/>
    <property name='java.vm.specification.version' value='1.0'/>
    <property name='sun.cpu.endian' value='little'/>
    <property name='sun.os.patch.level' value='unknown'/>
    <property name='java.io.tmpdir' value='/var/folders/fk/0n8fx3k91ls8lh981zzmm2lh0000gn/T/'/>
    <property name='java.vendor.url.bug' value='http://bugreport.apple.com/'/>
    <property name='mrj.build' value='11M4609'/>
    <property name='os.arch' value='x86_64'/>
    <property name='java.awt.graphicsenv' value='apple.awt.CGraphicsEnvironment'/>
    <property name='java.ext.dirs' value='/Library/Java/Extensions:/System/Library/Java/Extensions:/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home/lib/ext'/>
    <property name='org.osgi.test.cases.framework.div.tb16' value='xyz'/>
    <property name='mrj.version' value='1070.1.6.0_65-462'/>
    <property name='org.osgi.test.cases.framework.div.tb15' value='abc'/>
    <property name='user.dir' value='/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework'/>
    <property name='launch.trace' value='true'/>
    <property name='org.osgi.test.cases.framework.div.tb12' value='abc'/>
    <property name='line.separator' value='
'/>
    <property name='java.vm.name' value='Java HotSpot(TM) 64-Bit Server VM'/>
    <property name='osgi.resolverMode' value='strict'/>
    <property name='launch.embedded' value='false'/>
    <property name='launch.activators' value='aQute.junit.Activator'/>
    <property name='file.encoding' value='MacRoman'/>
    <property name='launch.system.packages' value='org.osgi.framework.startlevel;uses:="org.osgi.framework";version="1.0",org.osgi.framework.wiring;uses:="org.osgi.resource,org.osgi.framework";version="1.1",org.osgi.framework.hooks.bundle;uses:="org.osgi.framework";version="1.1",org.osgi.framework.hooks.service;uses:="org.osgi.framework";version="1.1",org.osgi.framework.hooks.resolver;uses:="org.osgi.framework.wiring";version="1.0",org.osgi.framework.namespace;uses:="org.osgi.resource";version="1.0",org.osgi.framework.launch;uses:="org.osgi.framework";version="1.1",org.osgi.framework;version="1.7",org.osgi.framework.hooks.weaving;uses:="org.osgi.framework.wiring";version="1.0",org.osgi.resource;version="1.0",org.osgi.service.url;version="1.0",org.osgi.service.packageadmin;uses:="org.osgi.framework";version="1.2",org.osgi.service.startlevel;uses:="org.osgi.framework";version="1.1",org.osgi.util.tracker;uses:="org.osgi.framework";version="1.5.1",junit.awtui;version="3.8.2";uses:="junit.framework",junit.extensions;version="3.8.2";uses:="junit.framework",junit.framework;version="3.8.2",junit.runner;version="3.8.2";uses:="junit.framework",junit.swingui;version="3.8.2";uses:="javax.swing,javax.swing.event,javax.swing.tree,junit.framework,junit.runner",junit.swingui.icons;version="3.8.2",junit.textui;version="3.8.2";uses:="junit.framework,junit.runner",org.junit;version="4.10";uses:="org.junit.internal,org.junit.internal.matchers",org.junit.experimental;version="4.10";uses:="org.junit.runners,org.junit.runner,org.junit.runners.model",org.junit.experimental.categories;version="4.10";uses:="org.junit.runners,org.junit.runner.manipulation,org.junit.runner,org.junit.runners.model",org.junit.experimental.max;version="4.10";uses:="org.junit.runners,org.junit.internal.requests,org.junit.runner.notification,org.junit.internal.runners,org.junit.runner,org.junit.runners.model,junit.framework",org.junit.experimental.results;version="4.10";uses:="org.junit.runner.notification,org.junit.internal,org.junit.runner,org.junit.internal.matchers",org.junit.experimental.runners;version="4.10";uses:="org.junit.runners,org.junit.runners.model",org.junit.experimental.theories;version="4.10";uses:="org.junit.runners,org.junit.internal,org.junit,org.junit.runners.model,org.junit.experimental.theories.internal",org.junit.experimental.theories.internal;version="4.10";uses:="org.junit.runners.model,org.junit.experimental.theories",org.junit.experimental.theories.suppliers;version="4.10";uses:="org.junit.experimental.theories",org.junit.internal;version="4.10";uses:="org.junit.runner.notification,org.junit,org.junit.runner",org.junit.internal.builders;version="4.10";uses:="org.junit.runners,org.junit.runner.notification,org.junit.internal.runners,org.junit,org.junit.runner,org.junit.runners.model,junit.framework",org.junit.internal.matchers;version="4.10",org.junit.internal.requests;version="4.10";uses:="org.junit.runner.manipulation,org.junit.internal.runners,org.junit.runner,org.junit.internal.builders",org.junit.internal.runners;version="4.10";uses:="org.junit.runner.notification,org.junit.internal,org.junit.runner.manipulation,org.junit,org.junit.runner,org.junit.runners.model,junit.framework",org.junit.internal.runners.model;version="4.10";uses:="org.junit.runner.notification,org.junit.internal,org.junit.runner,org.junit.runners.model",org.junit.internal.runners.rules;version="4.10";uses:="org.junit,org.junit.runners.model,org.junit.rules",org.junit.internal.runners.statements;version="4.10";uses:="org.junit.internal,org.junit.runners.model",org.junit.matchers;version="4.10";uses:="org.junit.internal.matchers",org.junit.rules;version="4.10";uses:="org.junit.internal,org.junit,org.junit.runner,org.junit.runners.model,org.junit.matchers,org.junit.internal.matchers,org.junit.internal.runners.statements",org.junit.runner;version="4.10";uses:="org.junit.runners,org.junit.internal.requests,org.junit.runner.notification,org.junit.internal,org.junit.runner.manipulation,org.junit.internal.runners,org.junit.runners.model,org.junit.internal.builders,junit.framework",org.junit.runner.manipulation;version="4.10";uses:="org.junit.runner",org.junit.runner.notification;version="4.10";uses:="org.junit.runner",org.junit.runners;version="4.10";uses:="org.junit.runner.notification,org.junit.internal,org.junit.runner.manipulation,org.junit.internal.runners,org.junit,org.junit.runner,org.junit.internal.runners.rules,org.junit.runners.model,org.junit.internal.builders,org.junit.internal.runners.model,org.junit.internal.runners.statements,org.junit.rules",org.junit.runners.model;version="4.10";uses:="org.junit.internal.runners,org.junit,org.junit.runner,org.junit.internal.runners.model"'/>
    <property name='java.specification.version' value='1.6'/>
    <property name='org.osgi.framework.executionenvironment' value='AA/BB,CC-XX/DD-YY,EE-2.0/FF-YY,GG-XX/HH-1.0,II-1.0/JJ-2.0,div/tb7a,OSGi/Minimum-1.0,OSGi/Minimum-1.1,OSGi/Minimum-1.2,JRE-1.1,J2SE-1.2,J2SE-1.3,J2SE-1.4,J2SE-1.5'/>
  </properties>
  <bundles>
    <bundle version='4.3.0.SNAPSHOT' location='System Bundle' bsn='org.apache.felix.framework' modified='1970-01-01T01:00:00' state='32' id='0'/>
    <bundle version='5.2.0.3' location='reference:file:/Users/David/clones/osgi-build_2/licensed/repo/org.apache.servicemix.bundles.bcel/org.apache.servicemix.bundles.bcel-5.2.0.jar' bsn='org.apache.servicemix.bundles.bcel' modified='2014-03-13T08:20:56' state='32' id='1'/>
    <bundle version='5.0.0.201403130820' location='reference:file:/Users/David/clones/osgi-build_2/org.osgi.test.cases.framework/generated/org.osgi.test.cases.framework.jar' bsn='org.osgi.test.cases.framework' modified='2014-03-13T08:20:56' state='32' target='true' id='2'/>
  </bundles>
<coverage>
  <class name="org.osgi.resource.Namespace" package="org.osgi.resource" short="Namespace">
    <method pretty="&lt;init&gt;" protected="true" constructor="true" descriptor="()V"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="adapt" public="true" constructor="false" name="adapt" descriptor="(Ljava/lang/Class;)Ljava/lang/Object;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="addBundleListener" public="true" constructor="false" name="addBundleListener" descriptor="(Lorg/osgi/framework/BundleListener;)V"/>
    <method pretty="addFrameworkListener" public="true" constructor="false" name="addFrameworkListener" descriptor="(Lorg/osgi/framework/FrameworkListener;)V"/>
    <method pretty="addServiceListener" public="true" constructor="false" name="addServiceListener" descriptor="(Lorg/osgi/framework/ServiceListener;Ljava/lang/String;)V"/>
  </class>
  <class name="org.osgi.framework.hooks.service.ListenerHook" package="org.osgi.framework.hooks.service" short="ListenerHook">
    <method pretty="added" public="true" constructor="false" name="added" descriptor="(Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.resolver.ResolverHookFactory" package="org.osgi.framework.hooks.resolver" short="ResolverHookFactory">
    <method pretty="begin" public="true" constructor="false" name="begin" descriptor="(Ljava/util/Collection;)Lorg/osgi/framework/hooks/resolver/ResolverHook;">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.BundleListener" package="org.osgi.framework" short="BundleListener">
    <method pretty="bundleChanged" public="true" constructor="false" name="bundleChanged" descriptor="(Lorg/osgi/framework/BundleEvent;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.Version" package="org.osgi.framework" short="Version">
    <method pretty="compareTo" public="true" constructor="false" name="compareTo" descriptor="(Lorg/osgi/framework/Version;)I"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="createFilter" public="true" constructor="false" name="createFilter" descriptor="(Ljava/lang/String;)Lorg/osgi/framework/Filter;"/>
  </class>
  <class name="org.osgi.framework.hooks.resolver.ResolverHook" package="org.osgi.framework.hooks.resolver" short="ResolverHook">
    <method pretty="end" public="true" constructor="false" name="end" descriptor="()V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="equals" public="true" constructor="false" name="equals" descriptor="(Ljava/lang/Object;)Z"/>
  </class>
  <class name="org.osgi.framework.hooks.bundle.EventHook" package="org.osgi.framework.hooks.bundle" short="EventHook">
    <method pretty="event" public="true" constructor="false" name="event" descriptor="(Lorg/osgi/framework/BundleEvent;Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.bundle.CollisionHook" package="org.osgi.framework.hooks.bundle" short="CollisionHook">
    <method pretty="filterCollisions" public="true" constructor="false" name="filterCollisions" descriptor="(ILorg/osgi/framework/Bundle;Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.resolver.ResolverHook" package="org.osgi.framework.hooks.resolver" short="ResolverHook">
    <method pretty="filterMatches" public="true" constructor="false" name="filterMatches" descriptor="(Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
    <method pretty="filterResolvable" public="true" constructor="false" name="filterResolvable" descriptor="(Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
    <method pretty="filterSingletonCollisions" public="true" constructor="false" name="filterSingletonCollisions" descriptor="(Lorg/osgi/framework/wiring/BundleCapability;Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.service.FindHook" package="org.osgi.framework.hooks.service" short="FindHook">
    <method pretty="find" public="true" constructor="false" name="find" descriptor="(Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="findEntries" public="true" constructor="false" name="findEntries" descriptor="(Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Enumeration;"/>
  </class>
  <class name="org.osgi.framework.FrameworkListener" package="org.osgi.framework" short="FrameworkListener">
    <method pretty="frameworkEvent" public="true" constructor="false" name="frameworkEvent" descriptor="(Lorg/osgi/framework/FrameworkEvent;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.PackagePermission" package="org.osgi.framework" short="PackagePermission">
    <method pretty="getActions" public="true" constructor="false" name="getActions" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getAllServiceReferences" public="true" constructor="false" name="getAllServiceReferences" descriptor="(Ljava/lang/String;Ljava/lang/String;)[Lorg/osgi/framework/ServiceReference;"/>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="getAttributes" public="true" constructor="false" name="getAttributes" descriptor="()Ljava/util/Map;"/>
  </class>
  <class name="org.osgi.framework.FrameworkEvent" package="org.osgi.framework" short="FrameworkEvent">
    <method pretty="getBundle" public="true" constructor="false" name="getBundle" descriptor="()Lorg/osgi/framework/Bundle;"/>
  </class>
  <class name="org.osgi.framework.hooks.service.ListenerHook$ListenerInfo" package="org.osgi.framework.hooks.service" short="ListenerHook$ListenerInfo">
    <method pretty="getBundleContext" public="true" constructor="false" name="getBundleContext" descriptor="()Lorg/osgi/framework/BundleContext;">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getBundleId" public="true" constructor="false" name="getBundleId" descriptor="()J"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getBundleWiring" public="true" constructor="false" name="getBundleWiring" descriptor="()Lorg/osgi/framework/wiring/BundleWiring;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getBundles" public="true" constructor="false" name="getBundles" descriptor="()[Lorg/osgi/framework/Bundle;"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getBytes" public="true" constructor="false" name="getBytes" descriptor="()[B"/>
  </class>
  <class name="org.osgi.resource.Resource" package="org.osgi.resource" short="Resource">
    <method pretty="getCapabilities" public="true" constructor="false" name="getCapabilities" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.resource.Wire" package="org.osgi.resource" short="Wire">
    <method pretty="getCapability" public="true" constructor="false" name="getCapability" descriptor="()Lorg/osgi/resource/Capability;"/>
  </class>
  <class name="org.osgi.framework.BundleException" package="org.osgi.framework" short="BundleException">
    <method pretty="getCause" public="true" constructor="false" name="getCause" descriptor="()Ljava/lang/Throwable;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="getClassLoader" public="true" constructor="false" name="getClassLoader" descriptor="()Ljava/lang/ClassLoader;"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getClassName" public="true" constructor="false" name="getClassName" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.Configurable" package="org.osgi.framework" short="Configurable">
    <method pretty="getConfigurationObject" public="true" constructor="false" name="getConfigurationObject" descriptor="()Ljava/lang/Object;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getDataFile" public="true" constructor="false" name="getDataFile" descriptor="(Ljava/lang/String;)Ljava/io/File;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleRevision" package="org.osgi.framework.wiring" short="BundleRevision">
    <method pretty="getDeclaredCapabilities" public="true" constructor="false" name="getDeclaredCapabilities" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
    <method pretty="getDeclaredRequirements" public="true" constructor="false" name="getDeclaredRequirements" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getDefinedClass" public="true" constructor="false" name="getDefinedClass" descriptor="()Ljava/lang/Class;"/>
  </class>
  <class name="org.osgi.framework.wiring.FrameworkWiring" package="org.osgi.framework.wiring" short="FrameworkWiring">
    <method pretty="getDependencyClosure" public="true" constructor="false" name="getDependencyClosure" descriptor="(Ljava/util/Collection;)Ljava/util/Collection;"/>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="getDirectives" public="true" constructor="false" name="getDirectives" descriptor="()Ljava/util/Map;"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getDynamicImports" public="true" constructor="false" name="getDynamicImports" descriptor="()Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getEntry" public="true" constructor="false" name="getEntry" descriptor="(Ljava/lang/String;)Ljava/net/URL;"/>
    <method pretty="getEntryPaths" public="true" constructor="false" name="getEntryPaths" descriptor="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
  </class>
  <class name="org.osgi.framework.InvalidSyntaxException" package="org.osgi.framework" short="InvalidSyntaxException">
    <method pretty="getFilter" public="true" constructor="false" name="getFilter" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getHeaders" public="true" constructor="false" name="getHeaders" descriptor="()Ljava/util/Dictionary;"/>
  </class>
  <class name="org.osgi.framework.startlevel.FrameworkStartLevel" package="org.osgi.framework.startlevel" short="FrameworkStartLevel">
    <method pretty="getInitialBundleStartLevel" public="true" constructor="false" name="getInitialBundleStartLevel" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getLastModified" public="true" constructor="false" name="getLastModified" descriptor="()J"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="getLeft" public="true" constructor="false" name="getLeft" descriptor="()Lorg/osgi/framework/Version;"/>
    <method pretty="getLeftType" public="true" constructor="false" name="getLeftType" descriptor="()C"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getLocation" public="true" constructor="false" name="getLocation" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.Version" package="org.osgi.framework" short="Version">
    <method pretty="getMajor" public="true" constructor="false" name="getMajor" descriptor="()I"/>
    <method pretty="getMicro" public="true" constructor="false" name="getMicro" descriptor="()I"/>
    <method pretty="getMinor" public="true" constructor="false" name="getMinor" descriptor="()I"/>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="getNamespace" public="true" constructor="false" name="getNamespace" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.BundleException" package="org.osgi.framework" short="BundleException">
    <method pretty="getNestedException" public="true" constructor="false" name="getNestedException" descriptor="()Ljava/lang/Throwable;"/>
  </class>
  <class name="org.osgi.framework.BundleEvent" package="org.osgi.framework" short="BundleEvent">
    <method pretty="getOrigin" public="true" constructor="false" name="getOrigin" descriptor="()Lorg/osgi/framework/Bundle;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getProperty" public="true" constructor="false" name="getProperty" descriptor="(Ljava/lang/String;)Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.ServiceReference" package="org.osgi.framework" short="ServiceReference">
    <method pretty="getPropertyKeys" public="true" constructor="false" name="getPropertyKeys" descriptor="()[Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="getProtectionDomain" public="true" constructor="false" name="getProtectionDomain" descriptor="()Ljava/security/ProtectionDomain;"/>
  </class>
  <class name="org.osgi.resource.Wiring" package="org.osgi.resource" short="Wiring">
    <method pretty="getProvidedResourceWires" public="true" constructor="false" name="getProvidedResourceWires" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="getProvidedWires" public="true" constructor="false" name="getProvidedWires" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.resource.Wire" package="org.osgi.resource" short="Wire">
    <method pretty="getProvider" public="true" constructor="false" name="getProvider" descriptor="()Lorg/osgi/resource/Resource;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWire" package="org.osgi.framework.wiring" short="BundleWire">
    <method pretty="getProviderWiring" public="true" constructor="false" name="getProviderWiring" descriptor="()Lorg/osgi/framework/wiring/BundleWiring;"/>
  </class>
  <class name="org.osgi.framework.Version" package="org.osgi.framework" short="Version">
    <method pretty="getQualifier" public="true" constructor="false" name="getQualifier" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.ServiceRegistration" package="org.osgi.framework" short="ServiceRegistration">
    <method pretty="getReference" public="true" constructor="false" name="getReference" descriptor="()Lorg/osgi/framework/ServiceReference;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getRegisteredServices" public="true" constructor="false" name="getRegisteredServices" descriptor="()[Lorg/osgi/framework/ServiceReference;"/>
  </class>
  <class name="org.osgi.framework.wiring.FrameworkWiring" package="org.osgi.framework.wiring" short="FrameworkWiring">
    <method pretty="getRemovalPendingBundles" public="true" constructor="false" name="getRemovalPendingBundles" descriptor="()Ljava/util/Collection;"/>
  </class>
  <class name="org.osgi.resource.Wiring" package="org.osgi.resource" short="Wiring">
    <method pretty="getRequiredResourceWires" public="true" constructor="false" name="getRequiredResourceWires" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="getRequiredWires" public="true" constructor="false" name="getRequiredWires" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.resource.Wire" package="org.osgi.resource" short="Wire">
    <method pretty="getRequirement" public="true" constructor="false" name="getRequirement" descriptor="()Lorg/osgi/resource/Requirement;"/>
  </class>
  <class name="org.osgi.resource.Resource" package="org.osgi.resource" short="Resource">
    <method pretty="getRequirements" public="true" constructor="false" name="getRequirements" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.resource.Wire" package="org.osgi.resource" short="Wire">
    <method pretty="getRequirer" public="true" constructor="false" name="getRequirer" descriptor="()Lorg/osgi/resource/Resource;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWire" package="org.osgi.framework.wiring" short="BundleWire">
    <method pretty="getRequirerWiring" public="true" constructor="false" name="getRequirerWiring" descriptor="()Lorg/osgi/framework/wiring/BundleWiring;"/>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="getResource" public="true" constructor="false" name="getResource" descriptor="()Lorg/osgi/resource/Resource;"/>
  </class>
  <class name="org.osgi.resource.Wiring" package="org.osgi.resource" short="Wiring">
    <method pretty="getResourceCapabilities" public="true" constructor="false" name="getResourceCapabilities" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
    <method pretty="getResourceRequirements" public="true" constructor="false" name="getResourceRequirements" descriptor="(Ljava/lang/String;)Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getResources" public="true" constructor="false" name="getResources" descriptor="(Ljava/lang/String;)Ljava/util/Enumeration;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleCapability" package="org.osgi.framework.wiring" short="BundleCapability">
    <method pretty="getRevision" public="true" constructor="false" name="getRevision" descriptor="()Lorg/osgi/framework/wiring/BundleRevision;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleRevisions" package="org.osgi.framework.wiring" short="BundleRevisions">
    <method pretty="getRevisions" public="true" constructor="false" name="getRevisions" descriptor="()Ljava/util/List;"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="getRight" public="true" constructor="false" name="getRight" descriptor="()Lorg/osgi/framework/Version;"/>
    <method pretty="getRightType" public="true" constructor="false" name="getRightType" descriptor="()C"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getService" public="true" constructor="false" name="getService" descriptor="(Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;"/>
  </class>
  <class name="org.osgi.framework.ServiceEvent" package="org.osgi.framework" short="ServiceEvent">
    <method pretty="getServiceReference" public="true" constructor="false" name="getServiceReference" descriptor="()Lorg/osgi/framework/ServiceReference;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="getServiceReferences" public="true" constructor="false" name="getServiceReferences" descriptor="(Ljava/lang/String;Ljava/lang/String;)[Lorg/osgi/framework/ServiceReference;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getServicesInUse" public="true" constructor="false" name="getServicesInUse" descriptor="()[Lorg/osgi/framework/ServiceReference;"/>
    <method pretty="getSignerCertificates" public="true" constructor="false" name="getSignerCertificates" descriptor="(I)Ljava/util/Map;"/>
  </class>
  <class name="org.osgi.framework.startlevel.FrameworkStartLevel" package="org.osgi.framework.startlevel" short="FrameworkStartLevel">
    <method pretty="getStartLevel" public="true" constructor="false" name="getStartLevel" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="getState" public="true" constructor="false" name="getState" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleRevision" package="org.osgi.framework.wiring" short="BundleRevision">
    <method pretty="getSymbolicName" public="true" constructor="false" name="getSymbolicName" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.FrameworkEvent" package="org.osgi.framework" short="FrameworkEvent">
    <method pretty="getThrowable" public="true" constructor="false" name="getThrowable" descriptor="()Ljava/lang/Throwable;"/>
    <method pretty="getType" public="true" constructor="false" name="getType" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleRevision" package="org.osgi.framework.wiring" short="BundleRevision">
    <method pretty="getTypes" public="true" constructor="false" name="getTypes" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.ServiceReference" package="org.osgi.framework" short="ServiceReference">
    <method pretty="getUsingBundles" public="true" constructor="false" name="getUsingBundles" descriptor="()[Lorg/osgi/framework/Bundle;"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleRevision" package="org.osgi.framework.wiring" short="BundleRevision">
    <method pretty="getVersion" public="true" constructor="false" name="getVersion" descriptor="()Lorg/osgi/framework/Version;"/>
    <method pretty="getWiring" public="true" constructor="false" name="getWiring" descriptor="()Lorg/osgi/framework/wiring/BundleWiring;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="hasPermission" public="true" constructor="false" name="hasPermission" descriptor="(Ljava/lang/Object;)Z"/>
  </class>
  <class name="org.osgi.resource.Capability" package="org.osgi.resource" short="Capability">
    <method pretty="hashCode" public="true" constructor="false" name="hashCode" descriptor="()I"/>
  </class>
  <class name="org.osgi.framework.PackagePermission" package="org.osgi.framework" short="PackagePermission">
    <method pretty="implies" public="true" constructor="false" name="implies" descriptor="(Ljava/security/Permission;)Z"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="includes" public="true" constructor="false" name="includes" descriptor="(Lorg/osgi/framework/Version;)Z"/>
  </class>
  <class name="org.osgi.framework.BundleException" package="org.osgi.framework" short="BundleException">
    <method pretty="initCause" public="true" constructor="false" name="initCause" descriptor="(Ljava/lang/Throwable;)Ljava/lang/Throwable;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="installBundle" public="true" constructor="false" name="installBundle" descriptor="(Ljava/lang/String;Ljava/io/InputStream;)Lorg/osgi/framework/Bundle;"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="intersection" public="true" constructor="false" name="intersection" descriptor="([Lorg/osgi/framework/VersionRange;)Lorg/osgi/framework/VersionRange;"/>
  </class>
  <class name="org.osgi.framework.startlevel.BundleStartLevel" package="org.osgi.framework.startlevel" short="BundleStartLevel">
    <method pretty="isActivationPolicyUsed" public="true" constructor="false" name="isActivationPolicyUsed" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.ServiceReference" package="org.osgi.framework" short="ServiceReference">
    <method pretty="isAssignableTo" public="true" constructor="false" name="isAssignableTo" descriptor="(Lorg/osgi/framework/Bundle;Ljava/lang/String;)Z"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="isCurrent" public="true" constructor="false" name="isCurrent" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="isEmpty" public="true" constructor="false" name="isEmpty" descriptor="()Z"/>
    <method pretty="isExact" public="true" constructor="false" name="isExact" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="isInUse" public="true" constructor="false" name="isInUse" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.startlevel.BundleStartLevel" package="org.osgi.framework.startlevel" short="BundleStartLevel">
    <method pretty="isPersistentlyStarted" public="true" constructor="false" name="isPersistentlyStarted" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.hooks.service.ListenerHook$ListenerInfo" package="org.osgi.framework.hooks.service" short="ListenerHook$ListenerInfo">
    <method pretty="isRemoved" public="true" constructor="false" name="isRemoved" descriptor="()Z">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="isWeavingComplete" public="true" constructor="false" name="isWeavingComplete" descriptor="()Z"/>
  </class>
  <class name="org.osgi.framework.wiring.BundleWiring" package="org.osgi.framework.wiring" short="BundleWiring">
    <method pretty="listResources" public="true" constructor="false" name="listResources" descriptor="(Ljava/lang/String;Ljava/lang/String;I)Ljava/util/Collection;"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="loadClass" public="true" constructor="false" name="loadClass" descriptor="(Ljava/lang/String;)Ljava/lang/Class;"/>
  </class>
  <class name="org.osgi.framework.Filter" package="org.osgi.framework" short="Filter">
    <method pretty="match" public="true" constructor="false" name="match" descriptor="(Lorg/osgi/framework/ServiceReference;)Z"/>
    <method pretty="matchCase" public="true" constructor="false" name="matchCase" descriptor="(Ljava/util/Dictionary;)Z"/>
  </class>
  <class name="org.osgi.framework.FrameworkUtil" package="org.osgi.framework" short="FrameworkUtil">
    <method pretty="matchDistinguishedNameChain" public="true" static="true" constructor="false" name="matchDistinguishedNameChain" descriptor="(Ljava/lang/String;Ljava/util/List;)Z"/>
  </class>
  <class name="org.osgi.framework.Filter" package="org.osgi.framework" short="Filter">
    <method pretty="matches" public="true" constructor="false" name="matches" descriptor="(Ljava/util/Map;)Z"/>
  </class>
  <class name="org.osgi.framework.PackagePermission" package="org.osgi.framework" short="PackagePermission">
    <method pretty="newPermissionCollection" public="true" constructor="false" name="newPermissionCollection" descriptor="()Ljava/security/PermissionCollection;"/>
  </class>
  <class name="org.osgi.framework.Version" package="org.osgi.framework" short="Version">
    <method pretty="parseVersion" public="true" static="true" constructor="false" name="parseVersion" descriptor="(Ljava/lang/String;)Lorg/osgi/framework/Version;"/>
  </class>
  <class name="org.osgi.framework.wiring.FrameworkWiring" package="org.osgi.framework.wiring" short="FrameworkWiring">
    <method pretty="refreshBundles" public="true" constructor="false" name="refreshBundles" descriptor="(Ljava/util/Collection;[Lorg/osgi/framework/FrameworkListener;)V"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="registerService" public="true" constructor="false" name="registerService" descriptor="([Ljava/lang/String;Ljava/lang/Object;Ljava/util/Dictionary;)Lorg/osgi/framework/ServiceRegistration;"/>
    <method pretty="removeBundleListener" public="true" constructor="false" name="removeBundleListener" descriptor="(Lorg/osgi/framework/BundleListener;)V"/>
    <method pretty="removeFrameworkListener" public="true" constructor="false" name="removeFrameworkListener" descriptor="(Lorg/osgi/framework/FrameworkListener;)V"/>
    <method pretty="removeServiceListener" public="true" constructor="false" name="removeServiceListener" descriptor="(Lorg/osgi/framework/ServiceListener;)V"/>
  </class>
  <class name="org.osgi.framework.hooks.service.ListenerHook" package="org.osgi.framework.hooks.service" short="ListenerHook">
    <method pretty="removed" public="true" constructor="false" name="removed" descriptor="(Ljava/util/Collection;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.wiring.FrameworkWiring" package="org.osgi.framework.wiring" short="FrameworkWiring">
    <method pretty="resolveBundles" public="true" constructor="false" name="resolveBundles" descriptor="(Ljava/util/Collection;)Z"/>
  </class>
  <class name="org.osgi.framework.ServiceListener" package="org.osgi.framework" short="ServiceListener">
    <method pretty="serviceChanged" public="true" constructor="false" name="serviceChanged" descriptor="(Lorg/osgi/framework/ServiceEvent;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WovenClass" package="org.osgi.framework.hooks.weaving" short="WovenClass">
    <method pretty="setBytes" public="true" constructor="false" name="setBytes" descriptor="([B)V"/>
  </class>
  <class name="org.osgi.framework.startlevel.FrameworkStartLevel" package="org.osgi.framework.startlevel" short="FrameworkStartLevel">
    <method pretty="setInitialBundleStartLevel" public="true" constructor="false" name="setInitialBundleStartLevel" descriptor="(I)V"/>
  </class>
  <class name="org.osgi.framework.ServiceRegistration" package="org.osgi.framework" short="ServiceRegistration">
    <method pretty="setProperties" public="true" constructor="false" name="setProperties" descriptor="(Ljava/util/Dictionary;)V"/>
  </class>
  <class name="org.osgi.framework.startlevel.FrameworkStartLevel" package="org.osgi.framework.startlevel" short="FrameworkStartLevel">
    <method pretty="setStartLevel" public="true" constructor="false" name="setStartLevel" descriptor="(I[Lorg/osgi/framework/FrameworkListener;)V"/>
  </class>
  <class name="org.osgi.framework.BundleActivator" package="org.osgi.framework" short="BundleActivator">
    <method pretty="start" public="true" constructor="false" name="start" descriptor="(Lorg/osgi/framework/BundleContext;)V"/>
    <method pretty="stop" public="true" constructor="false" name="stop" descriptor="(Lorg/osgi/framework/BundleContext;)V"/>
  </class>
  <class name="org.osgi.framework.VersionRange" package="org.osgi.framework" short="VersionRange">
    <method pretty="toFilterString" public="true" constructor="false" name="toFilterString" descriptor="(Ljava/lang/String;)Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.Filter" package="org.osgi.framework" short="Filter">
    <method pretty="toString" public="true" constructor="false" name="toString" descriptor="()Ljava/lang/String;"/>
  </class>
  <class name="org.osgi.framework.BundleContext" package="org.osgi.framework" short="BundleContext">
    <method pretty="ungetService" public="true" constructor="false" name="ungetService" descriptor="(Lorg/osgi/framework/ServiceReference;)Z"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="uninstall" public="true" constructor="false" name="uninstall" descriptor="()V"/>
  </class>
  <class name="org.osgi.framework.ServiceRegistration" package="org.osgi.framework" short="ServiceRegistration">
    <method pretty="unregister" public="true" constructor="false" name="unregister" descriptor="()V"/>
  </class>
  <class name="org.osgi.framework.Bundle" package="org.osgi.framework" short="Bundle">
    <method pretty="update" public="true" constructor="false" name="update" descriptor="(Ljava/io/InputStream;)V"/>
  </class>
  <class name="org.osgi.framework.hooks.weaving.WeavingHook" package="org.osgi.framework.hooks.weaving" short="WeavingHook">
    <method pretty="weave" public="true" constructor="false" name="weave" descriptor="(Lorg/osgi/framework/hooks/weaving/WovenClass;)V">
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
      <ref pretty="&lt;implements&gt;" constructor="false" name="&lt;implements&gt;" descriptor="()V"/>
    </method>
  </class>
</coverage>

  <testcase name='testActivationPolicy01' time='0.292' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicy02' time='5.302' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicy03' time='5.334' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicy04' time='0.67' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicy05' time='0.100' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testStartTransient01' time='0.69' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testStopTransient01' time='0.70' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicyChain01' time='0.406' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testActivationPolicyChain02' time='0.429' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testClassCircularity' time='0.168' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testGetBundleContext' time='0.80' classname='org.osgi.test.cases.framework.junit.activationpolicy.TestControl'/>
  <testcase name='testBundleContextAdapt' time='0.1' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testBundleRevisionAdapt' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testBundleRevisionsAdapt' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testBundleStartLevelAdapt' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testBundleWiringAdapt' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testFrameworktAdapt' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testFrameworktStartLevel' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testFrameworktWiring' time='0.0' classname='org.osgi.test.cases.framework.junit.adaptations.BundleAdaptTests'/>
  <testcase name='testBundleContextGetReference001' time='0.338' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking the service reference returned by BundleContext.getServiceReference()
    </system-out>
  </testcase>
  <testcase name='testBundleContextGetReference002' time='0.80' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking the behavior of BundleContext.getServiceReference()
       when BundleContext.getServiceReferences() returns no references
    </system-out>
  </testcase>
  <testcase name='testBundleContextGetAllServiceReferences001' time='0.422' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking if the method getAllServiceReferences returns the
       number of services as expected
    </system-out>
  </testcase>
  <testcase name='testBundleContextIsAssignableTo001' time='0.261' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking if the method isAssignableTo returns true when the
       package source of the getter bundle is the same of the registrant
       bundle
    </system-out>
  </testcase>
  <testcase name='testBundleContextIsAssignableTo002' time='0.339' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking if the method isAssignableTo returns false when the
       package source of the getter bundle is not the same of the
       registrant bundle
    </system-out>
  </testcase>
  <testcase name='testServiceRegistryWithMultipleServices001' time='0.511' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Checking if the correct service is imported
Checking if the
       correct service is imported
    </system-out>
  </testcase>
  <testcase name='testServiceListener001' time='1.451' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testServiceListener002' time='1.318' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testAllServiceListener001' time='2.498' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testUnfilteredAllServiceListener001' time='2.519' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testServiceTracker001' time='0.161' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testJavaPackageExplicityExportImport001' time='0.53' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle which declares imports for java.*
Installing
       a bundle which declares exports for java.*
    </system-out>
  </testcase>
  <testcase name='testHiddenPackages001' time='0.82' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle which uses a package accessible using the
       system class loader
    </system-out>
  </testcase>
  <testcase name='testClassLoadingSearchOrder001' time='0.357' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder002' time='0.352' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder003' time='0.266' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder004' time='0.234' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder005' time='0.185' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder006' time='0.169' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder007' time='0.174' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testClassLoadingSearchOrder008' time='0.84' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testBundleModule001' time='0.199' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testBundleSymbolicName001' time='0.29' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Not able to install testbundle bundle://2.0:0/classloading.tb11a.jar
      
Nested null
    </system-out>
    <system-err>
      org.osgi.framework.BundleException: R4 bundle manifests must
       include bundle symbolic name.
	at org.apache.felix.framework.util.manifestparser.ManifestParser.&amp;lt;init&amp;gt;(ManifestParser.java:155)
      
	at org.apache.felix.framework.BundleRevisionImpl.&amp;lt;init&amp;gt;(BundleRevisionImpl.java:118)
      
	at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1238)
      
	at org.apache.felix.framework.BundleImpl.&amp;lt;init&amp;gt;(BundleImpl.java:112)
      
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2905)
      
	at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:165)
      
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:509)
      
	at org.osgi.test.support.compatibility.DefaultTestBundleControl.installBundle(DefaultTestBundleControl.java:497)
      
	at org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests.testBundleSymbolicName001(ClassLoadingTests.java:1315)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testSingletonBundle001' time='0.315' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testBundleInstall001' time='0.77' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with the same symbolic name and version
       of other installed bundle
    </system-out>
  </testcase>
  <testcase name='testPackageExport001' time='0.271' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with correct export syntax
    </system-out>
  </testcase>
  <testcase name='testPackageExport002' time='0.348' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from the imported package
Loading a resource
       and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageExport003' time='0.617' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a resource and checking its loading bundle
Loading
       a resource and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageExport004' time='0.323' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from the imported package
Loading a resource
       and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageExport005' time='0.176' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from the imported package
    </system-out>
  </testcase>
  <testcase name='testPackageExport006' time='0.164' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Starting a bundle which incorrectly imports a package
    </system-out>
  </testcase>
  <testcase name='testPackageExport007' time='0.160' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class which matchs the include list
Loading a class
       which matchs the exclude list
    </system-out>
  </testcase>
  <testcase name='testPackageExport008' time='0.84' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with an exported package having the same
       value for version and specification-version attributes
Installing
       a bundle with an exported package having different values
       for version and specification-version attributes
    </system-out>
  </testcase>
  <testcase name='testPackageExport009' time='0.28' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with an exported package which incorrectly
       specify bundle-symbolic-name and bundle-version
    </system-out>
  </testcase>
  <testcase name='testPackageImport001' time='0.229' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from the imported package
Loading a resource
       and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageImport002' time='0.245' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Starting a bundle with an import package that is not available
      
Starting a bundle with an import package that is available
      
Loading a class from the imported package
    </system-out>
  </testcase>
  <testcase name='testPackageImport003' time='5.187' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Starting a bundle with an import package that is not available
    </system-out>
  </testcase>
  <testcase name='testPackageImport004' time='0.172' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with an import package having the same
       value for version and specification-version attributes
Installing
       a bundle with an import package having different values for
       version and specification-version attributes
    </system-out>
  </testcase>
  <testcase name='testPackageImport005' time='0.170' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Starting a bundle which imports a package specifying the bundle
       name and version
    </system-out>
  </testcase>
  <testcase name='testPackageImport006' time='0.108' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testPackageImport007' time='0.250' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a resource and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport001' time='0.88' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Starting a bundle importing dynamically an exported package
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport002' time='0.265' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading resources from a dynamic imported package
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport003' time='0.234' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a resource and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport004' time='0.236' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testPackageDynamicImport005' time='0.189' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Installing a bundle with a dynamic imported package having
       the same value for version and specification-version attributes
      
Loading a class from a dynamic imported package
Installing
       a bundle with a dynamic imported package having different
       values for version and specification-version attributes
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport006' time='0.164' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from a dynamic imported package
    </system-out>
  </testcase>
  <testcase name='testPackageDynamicImport007' time='0.175' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from a dynamic imported package
    </system-out>
  </testcase>
  <testcase name='testRequiredBundle001' time='0.255' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle002' time='0.171' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle004' time='0.238' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle005' time='0.185' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle006' time='0.181' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle007' time='0.169' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle008' time='0.321' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-out>
      Loading a class from the imported package
Loading a resource
       and checking its loading bundle
    </system-out>
  </testcase>
  <testcase name='testRequiredBundle009' time='0.354' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testRequiredBundle010' time='0.265' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testInstallingModules001' time='0.21' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testInstallingModules002' time='0.25' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testInstallingModules003' time='0.26' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'/>
  <testcase name='testInstallingModules004' time='0.27' classname='org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests'>
    <system-err>
      org.osgi.framework.BundleException: Could not create bundle
       object.
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2958)
      
	at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:165)
      
	at org.apache.felix.framework.BundleContextImpl.installBundle(BundleContextImpl.java:138)
      
	at org.osgi.test.cases.framework.junit.classloading.ClassLoadingTests.testInstallingModules004(ClassLoadingTests.java:3035)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
Caused by: java.lang.IllegalArgumentException:
       Both version and specification-version are specified, but
       they are not equal.
	at org.apache.felix.framework.util.manifestparser.ManifestParser.normalizeImportClauses(ManifestParser.java:312)
      
	at org.apache.felix.framework.util.manifestparser.ManifestParser.&amp;lt;init&amp;gt;(ManifestParser.java:180)
      
	at org.apache.felix.framework.BundleRevisionImpl.&amp;lt;init&amp;gt;(BundleRevisionImpl.java:118)
      
	at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1238)
      
	at org.apache.felix.framework.BundleImpl.&amp;lt;init&amp;gt;(BundleImpl.java:112)
      
	at org.apache.felix.framework.Felix.installBundle(Felix.java:2905)
      
	... 20 more
    </system-err>
  </testcase>
  <testcase name='testImportUninstalledCode' time='0.62' classname='org.osgi.test.cases.framework.junit.classpath.ClassPathControl'>
    <system-out>
      Web req bundle://2.0:0/classpath.tb1.jar
Length 4096
    </system-out>
  </testcase>
  <testcase name='testExport' time='0.75' classname='org.osgi.test.cases.framework.junit.classpath.ClassPathControl'/>
  <testcase name='testReinstall' time='0.62' classname='org.osgi.test.cases.framework.junit.classpath.ClassPathControl'/>
  <testcase name='testImportGone' time='0.167' classname='org.osgi.test.cases.framework.junit.classpath.ClassPathControl'/>
  <testcase name='testId1' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByIdTests'/>
  <testcase name='testSystemBundleId1' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByIdTests'/>
  <testcase name='testLocation1' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByLocationTests'/>
  <testcase name='testSystemBundle1' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByLocationTests'/>
  <testcase name='testSystemBundle2' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByLocationTests'/>
  <testcase name='testSystemBundle3' time='0.0' classname='org.osgi.test.cases.framework.junit.context.GetBundleByLocationTests'/>
  <testcase name='testManifestHeaders' time='0.76' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testMissingManifestHeaders' time='0.76' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleClassPath' time='0.0' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleLocation' time='0.332' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCode' time='0.90' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testFrameworkListener' time='0.86' classname='org.osgi.test.cases.framework.junit.div.DivTests'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework.div.tb3 [213] Error
       stopping bundle. (org.osgi.framework.BundleException: Causing
       a FrameworkEvent in stop())
    </system-out>
    <system-err>
      org.osgi.framework.BundleException: Causing a FrameworkEvent
       in stop()
	at org.osgi.test.cases.framework.div.tb3.CauseFrameworkEvent.stop(CauseFrameworkEvent.java:28)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.Felix.uninstallBundle(Felix.java:2638)
      
	at org.apache.felix.framework.BundleImpl.uninstall(BundleImpl.java:1043)
      
	at org.osgi.test.cases.framework.junit.div.DivTests.testFrameworkListener(DivTests.java:186)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testFileAccess' time='0.5' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleZero' time='0.0' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testEERequirement' time='0.66' classname='org.osgi.test.cases.framework.junit.div.DivTests'>
    <failure type='junit.framework.AssertionFailedError'><![CDATA[junit.framework.AssertionFailedError: Required Execution Environment is available: Unresolved constraint in bundle org.osgi.test.cases.framework.div.tb7a [214]: Unable to resolve 214.0: missing requirement [214.0] osgi.ee; (|(osgi.ee=div/tb7a)(osgi.ee=div/tb7b))
at org.osgi.test.support.OSGiTestCase.fail(OSGiTestCase.java:70)
at org.osgi.test.cases.framework.junit.div.DivTests.testEERequirement(DivTests.java:253)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at junit.framework.TestCase.runTest(TestCase.java:164)
at junit.framework.TestCase.runBare(TestCase.java:130)
at junit.framework.TestResult$1.protect(TestResult.java:106)
at junit.framework.TestResult.runProtected(TestResult.java:124)
at junit.framework.TestResult.run(TestResult.java:109)
at junit.framework.TestCase.run(TestCase.java:120)
at junit.framework.TestSuite.runTest(TestSuite.java:230)
at junit.framework.TestSuite.run(TestSuite.java:225)
at junit.framework.TestSuite.runTest(TestSuite.java:230)
at junit.framework.TestSuite.run(TestSuite.java:225)
at aQute.junit.Activator.test(Activator.java:226)
at aQute.junit.Activator.automatic(Activator.java:118)
at aQute.junit.Activator.run(Activator.java:59)
]]>
    </failure>
    <system-out>
      EE: AA/BB,CC-XX/DD-YY,EE-2.0/FF-YY,GG-XX/HH-1.0,II-1.0/JJ-2.0,div/tb7a,OSGi/Minimum-1.0,OSGi/Minimum-1.1,OSGi/Minimum-1.2,JRE-1.1,J2SE-1.2,J2SE-1.3,J2SE-1.4,J2SE-1.5
    </system-out>
  </testcase>
  <testcase name='testNativeCodeFilterOptional' time='0.71' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeFilterNoOptional' time='0.72' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeFilterAlias' time='0.97' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeFragment' time='0.148' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeLanguage' time='0.72' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeLanguageSuccess' time='0.93' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeVersion' time='0.72' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testNativeCodeVersionSuccess' time='0.103' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleEventConstants' time='0.0' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testFrameworkEventConstants' time='0.0' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetEntry' time='0.54' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetEntryPaths' time='0.60' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetResource' time='0.120' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetResourcesResolved' time='0.54' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetResourcesUnresolved' time='0.65' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetResources' time='0.98' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetSymbolicName1' time='0.58' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetSymbolicName2' time='0.95' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetBundleContext1' time='0.97' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleGetBundleContext2' time='0.145' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleLoadClass1' time='0.94' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleLoadClass2' time='0.42' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testBundleContextRegisterService' time='0.268' classname='org.osgi.test.cases.framework.junit.div.DivTests'/>
  <testcase name='testGetHeaders001' time='0.72' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders002' time='0.95' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders003' time='0.75' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders004' time='0.79' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders005' time='0.87' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders006' time='0.77' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders007' time='0.85' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders008' time='0.80' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders009' time='0.78' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders010' time='0.136' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders011' time='0.133' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders012' time='0.138' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testGetHeaders013' time='0.262' classname='org.osgi.test.cases.framework.junit.div.ManifestLocalizationTests'/>
  <testcase name='testInitial' time='0.190' classname='org.osgi.test.cases.framework.junit.dynpkgimport.DynPkgImportTests'/>
  <testcase name='testBasicImport1' time='0.167' classname='org.osgi.test.cases.framework.junit.dynpkgimport.DynPkgImportTests'/>
  <testcase name='testBasicImport2' time='0.186' classname='org.osgi.test.cases.framework.junit.dynpkgimport.DynPkgImportTests'/>
  <testcase name='testPrecedence' time='0.145' classname='org.osgi.test.cases.framework.junit.dynpkgimport.DynPkgImportTests'/>
  <testcase name='testUninstall' time='0.175' classname='org.osgi.test.cases.framework.junit.dynpkgimport.DynPkgImportTests'/>
  <testcase name='testCaseInsensitive' time='0.38' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testCaseSensitive' time='0.7' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testInvalidValues' time='0.13' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testNullProperties' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testInvalidFilter' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testScalarSubstring' time='0.4' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testNormalization' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testComparable' time='0.2' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testComparableException' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testObject' time='0.1' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testObjectException' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testValueOf' time='0.1' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testValueOfException' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testValueOfWithUnassignableReturnType' time='0.1' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testNullMapValue' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testComparableValueOf' time='0.1' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='testComparableValueOfException' time='0.0' classname='org.osgi.test.cases.framework.junit.filter.BundleContextFilterTests'/>
  <testcase name='test_framework_filter_m1' time='0.87' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m2' time='0.86' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'>
    <system-out>
      Exception thrown
    </system-out>
  </testcase>
  <testcase name='test_framework_filter_m3' time='0.68' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m4' time='0.77' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m5' time='0.73' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m6' time='0.78' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m9' time='0.82' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_m10' time='0.89' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s1' time='0.81' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s2' time='0.73' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s3' time='0.78' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s4' time='0.77' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s5' time='0.86' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s6' time='0.89' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='test_framework_filter_s7' time='0.85' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'>
    <system-out>
      Invalid syntax??
    </system-out>
  </testcase>
  <testcase name='test_framework_filter_s9' time='0.82' classname='org.osgi.test.cases.framework.junit.filter.FilterTests'/>
  <testcase name='testFragmentLifecycle' time='0.48' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testAppendClasspath01' time='0.142' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testAppendClasspath02' time='0.180' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testExistingResourceNotReplaced' time='0.140' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentCannotBeHost' time='0.189' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentMultipleHosts' time='0.198' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentAttachmentDirective01' time='0.125' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentAttachmentDirective02' time='0.139' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentAttachmentDirective03' time='0.134' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testAttachToResolvedHost01' time='0.141' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testAttachToResolvedHost02' time='0.197' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentUpdate' time='2.174' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'>
    <system-out>
      Captured org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 1
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 1
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 2
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 64
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 8
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 4
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 2
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 4
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 16
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 16
    </system-out>
  </testcase>
  <testcase name='testConflictingImportPackage' time='0.339' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testConflictingExportPackage' time='0.246' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testConflictingRequireBundle' time='0.246' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testFragmentBundleDetach' time='6.193' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'>
    <system-out>
      Captured org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1b
       of type 1
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 1
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 1
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1b of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1b of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 2
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1b of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1b
       of type 16
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 4
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 64
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 32
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 32
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 2
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 4
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1a of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1a
       of type 16
Captured org.osgi.framework.BundleEvent for bundle
       org.osgi.test.cases.framework.fragments.tb1g of type 64
Captured
       org.osgi.framework.BundleEvent for bundle org.osgi.test.cases.framework.fragments.tb1g
       of type 16
    </system-out>
  </testcase>
  <testcase name='testHostBecomesFragment' time='0.99' classname='org.osgi.test.cases.framework.junit.fragments.TestControl'/>
  <testcase name='testBundleReference' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.BundleReferenceTests'/>
  <testcase name='testGetBundle' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.BundleReferenceTests'/>
  <testcase name='testBootClass' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.BundleReferenceTests'/>
  <testcase name='testNull' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.BundleReferenceTests'/>
  <testcase name='testCaseInsensitive' time='0.8' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testCaseSensitive' time='0.2' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testInvalidValues' time='0.3' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testNullProperties' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testInvalidFilter' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testScalarSubstring' time='0.2' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testNormalization' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testComparable' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testComparableException' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testObject' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testObjectException' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testValueOf' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testValueOfException' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testValueOfWithUnassignableReturnType' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testNullMapValue' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testComparableValueOf' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testComparableValueOfException' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.FrameworkUtilFilterTests'/>
  <testcase name='testMatch' time='0.19' classname='org.osgi.test.cases.framework.junit.frameworkutil.MatchDNChainTests'/>
  <testcase name='testEscape' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.MatchDNChainTests'/>
  <testcase name='testInvalidPattern' time='0.1' classname='org.osgi.test.cases.framework.junit.frameworkutil.MatchDNChainTests'/>
  <testcase name='testInvalidDNChain' time='0.0' classname='org.osgi.test.cases.framework.junit.frameworkutil.MatchDNChainTests'/>
  <testcase name='testFindHook01' time='0.235' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'>
    <system-out>
      WARNING: SvcRef [org.osgi.framework.hooks.bundle.FindHook]
       Problem invoking bundle hook. (java.lang.RuntimeException:
       testFindHook01)
    </system-out>
  </testcase>
  <testcase name='testFindHook02' time='0.207' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'/>
  <testcase name='testFindHook03' time='0.245' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'>
    <system-out>
      WARNING: SvcRef [org.osgi.framework.hooks.bundle.FindHook]
       Problem invoking bundle hook. (java.lang.RuntimeException:
       testFindHook03)
    </system-out>
  </testcase>
  <testcase name='testFindHookInstall' time='0.216' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'/>
  <testcase name='testEventHook01' time='6.350' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'/>
  <testcase name='testEventHook02' time='0.304' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'/>
  <testcase name='testCollisionHook' time='0.329' classname='org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework.hooks.tb1 [349]
       Unable to update the bundle. (org.osgi.framework.BundleException:
       Bundle symbolic name and version are not unique: org.osgi.test.cases.framework.hooks.tb2:4.0.0)
    </system-out>
    <system-err>
      org.osgi.framework.BundleException: Bundle symbolic name and
       version are not unique: org.osgi.test.cases.framework.hooks.tb2:4.0.0
      
	at org.apache.felix.framework.BundleImpl.createRevision(BundleImpl.java:1305)
      
	at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1180)
      
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:2288)
      
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:994)
      
	at org.osgi.test.cases.framework.junit.hooks.bundle.BundleHookTests.testCollisionHook(BundleHookTests.java:1083)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testBeginEnd01' time='0.137' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testHookErrors01' time='0.107' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testHookErrors02' time='0.131' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testBeginTriggers' time='0.427' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterResolvable01' time='0.120' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterImportPackage01' time='0.123' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterImportPackage02' time='0.173' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterDyanmicImportPackage01' time='0.181' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterRequireBundle01' time='0.184' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterHost01' time='0.154' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterGenericRequire01' time='0.157' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterSingletonCollisions01' time='0.199' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFilterMatchesCandidates' time='0.343' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testNestedResolveOperations' time='0.208' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testAddRemoveHooks' time='0.189' classname='org.osgi.test.cases.framework.junit.hooks.resolver.ResolverHookTests'/>
  <testcase name='testFindHook01' time='0.3' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testFindHook02' time='0.1' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testEventHook01' time='0.1' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testEventHook02' time='0.1' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testEventListenerHook01' time='0.3' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testEventListenerHook02' time='0.1' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testEventListenerHook03' time='0.2' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testListenerHook01' time='0.1' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testListenerHook02' time='0.0' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testListenerHook03' time='0.0' classname='org.osgi.test.cases.framework.junit.hooks.service.ServiceHookTests'/>
  <testcase name='testBasicWeaving' time='0.121' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBasicWeavingNoDynamicImport' time='0.87' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBasicWeavingDynamicImport' time='0.77' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testMultipleWeavers' time='0.79' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testMultipleWeaversWithRankings' time='0.93' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testExceptionPreventsSubsequentCalls' time='0.81' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testExceptionCausesBlackListing' time='0.345' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testWeavingExceptionDoesNotCauseBlackListing' time='0.336' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBlackListingOnlyAppliesToRegistration' time='0.343' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testDynamicImport' time='0.422' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testVersionConstrainedDynamicImport' time='0.421' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBSNConstrainedDynamicImport' time='0.418' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBSNAndVersionConstrainedDynamicImport' time='0.410' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testAttributeConstrainedDynamicImport' time='0.403' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testMandatoryAttributeConstrainedDynamicImport' time='0.414' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testMultipleConflictingDynamicImports' time='0.400' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBadDynamicImportString' time='0.406' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testWovenClass' time='0.75' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testBadWeaveClass' time='0.75' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testHookException' time='0.83' classname='org.osgi.test.cases.framework.junit.hooks.weaving.WeavingHookTests'/>
  <testcase name='testNormalInstallStartStopUninstall' time='0.84' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testStartStopWithException' time='0.147' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework.lifecycle.tb2b
       [458] Error stopping bundle. (org.osgi.framework.BundleException:
       A bundle exception.)
    </system-out>
    <system-err>
      org.osgi.framework.BundleException: A bundle exception.
	at
       org.osgi.test.cases.framework.lifecycle.tb2b.StopWithException.stop(StopWithException.java:30)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:1012)
      
	at org.apache.felix.framework.BundleImpl.stop(BundleImpl.java:999)
      
	at org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl.testStartStopWithException(TestBundleControl.java:108)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testUnavailableURL' time='0.13' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testBrokenStream' time='0.17' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testEvents' time='0.243' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'>
    <system-out>
      Waiting for event
Waiting for event
Waiting for event
    </system-out>
  </testcase>
  <testcase name='testServiceRegistrations' time='0.0' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testNormalUpdate' time='0.86' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'>
    <system-out>
      Waiting for event
Waiting for event
Waiting for event
Waiting
       for event
    </system-out>
  </testcase>
  <testcase name='testRollbackUpdate' time='0.81' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework.lifecycle.tb7 [465]
       Unable to update the bundle. (java.net.SocketException: Unexpected
       end of file from server)
    </system-out>
    <system-err>
      java.net.SocketException: Unexpected end of file from server
      
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:793)
      
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:652)
      
	at sun.net.www.http.HttpClient.parseHTTPHeader(HttpClient.java:790)
      
	at sun.net.www.http.HttpClient.parseHTTP(HttpClient.java:652)
      
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1218)
      
	at org.apache.felix.framework.util.SecureAction.getURLConnectionInputStream(SecureAction.java:524)
      
	at org.apache.felix.framework.cache.JarRevision.initialize(JarRevision.java:165)
      
	at org.apache.felix.framework.cache.JarRevision.&amp;lt;init&amp;gt;(JarRevision.java:77)
      
	at org.apache.felix.framework.cache.BundleArchive.createRevisionFromLocation(BundleArchive.java:878)
      
	at org.apache.felix.framework.cache.BundleArchive.reviseInternal(BundleArchive.java:550)
      
	at org.apache.felix.framework.cache.BundleArchive.revise(BundleArchive.java:522)
      
	at org.apache.felix.framework.BundleImpl.revise(BundleImpl.java:1177)
      
	at org.apache.felix.framework.Felix.updateBundle(Felix.java:2288)
      
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:994)
      
	at org.apache.felix.framework.BundleImpl.update(BundleImpl.java:981)
      
	at org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl.testRollbackUpdate(TestBundleControl.java:303)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testStoppedBundleContext' time='0.106' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testGetLocation' time='0.46' classname='org.osgi.test.cases.framework.junit.lifecycle.TestBundleControl'/>
  <testcase name='testInvalid' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testActions' time='0.12' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testWildcard' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testActionImplications' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testFiltersName' time='0.4' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testFiltersBundle' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testPermissionCollection' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.AdaptPermissionTests'/>
  <testcase name='testFilter' time='0.6' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testInvalid' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testActionImplications' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testDefault' time='0.2' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testSigners' time='0.2' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testInvalidDN' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.AdminPermissionTests'/>
  <testcase name='testNames' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.BundlePermissionTests'/>
  <testcase name='testInvalid' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.BundlePermissionTests'/>
  <testcase name='testActions' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.BundlePermissionTests'/>
  <testcase name='testActionImplications' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.BundlePermissionTests'/>
  <testcase name='testNames' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testInvalid' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testActions' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testActionImplications' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testFiltersName' time='0.4' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testPermissionCollection' time='0.7' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testFiltersAttributesBundle' time='0.8' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testAttributes' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.CapabilityPermissionTests'/>
  <testcase name='testNames' time='0.6' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testInvalid' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testActions' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testActionImplications' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testFiltersName' time='0.4' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testFiltersBundle' time='0.6' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testPermissionCollection' time='0.6' classname='org.osgi.test.cases.framework.junit.permissions.PackagePermissionTests'/>
  <testcase name='testAdminPermission' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.PermissionRecursionTests'/>
  <testcase name='testServicePermission' time='0.2' classname='org.osgi.test.cases.framework.junit.permissions.PermissionRecursionTests'/>
  <testcase name='testPackagePermission' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.PermissionRecursionTests'/>
  <testcase name='testCapabilityPermission' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.PermissionRecursionTests'/>
  <testcase name='testNames' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testInvalid' time='0.1' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testActions' time='0.2' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testActionImplications' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testFiltersName' time='0.3' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testPermissionCollection' time='0.7' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testFiltersServiceReference' time='0.5' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testServiceProperties' time='0.0' classname='org.osgi.test.cases.framework.junit.permissions.ServicePermissionTests'/>
  <testcase name='testGetEntryRoot' time='0.47' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testGetEntry01' time='0.55' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testGetEntry02' time='0.52' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testFindEntries01' time='0.67' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testFragmentFindEntries01' time='0.133' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testGetEntryPaths01' time='0.53' classname='org.osgi.test.cases.framework.junit.resources.GetEntryResourceTests'/>
  <testcase name='testServiceException01' time='0.2' classname='org.osgi.test.cases.framework.junit.service.ServiceExceptionTests'/>
  <testcase name='testServiceException02' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceExceptionTests'/>
  <testcase name='testServiceException03' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceExceptionTests'/>
  <testcase name='testServiceException04' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceExceptionTests'/>
  <testcase name='testServiceListener01' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testServiceListener02' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testServiceListener03' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testServiceOrdering01' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testDuplicateObjectClass' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testEventSpan' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testBasicRegistration' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testBasicFactory' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testFactoryGetException' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testFactoryUngetException' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework [2] ServiceRegistrationImpl:
       Error ungetting service. (java.lang.RuntimeException: testFactoryException:ungetService)
    </system-out>
    <system-err>
      java.lang.RuntimeException: testFactoryException:ungetService
      
	at org.osgi.test.cases.framework.junit.service.ServiceRegistryTests$12.ungetService(ServiceRegistryTests.java:624)
      
	at org.apache.felix.framework.ServiceRegistrationImpl.ungetFactoryUnchecked(ServiceRegistrationImpl.java:362)
      
	at org.apache.felix.framework.ServiceRegistrationImpl.ungetService(ServiceRegistrationImpl.java:271)
      
	at org.apache.felix.framework.ServiceRegistry.ungetService(ServiceRegistry.java:406)
      
	at org.apache.felix.framework.Felix.ungetService(Felix.java:3586)
      
	at org.apache.felix.framework.BundleContextImpl.ungetService(BundleContextImpl.java:486)
      
	at org.osgi.test.cases.framework.junit.service.ServiceRegistryTests.testFactoryUngetException(ServiceRegistryTests.java:638)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
      
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
      
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
      
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
      
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at
       junit.framework.TestResult$1.protect(TestResult.java:106)
      
	at junit.framework.TestResult.runProtected(TestResult.java:124)
      
	at junit.framework.TestResult.run(TestResult.java:109)
	at
       junit.framework.TestCase.run(TestCase.java:120)
	at junit.framework.TestSuite.runTest(TestSuite.java:230)
      
	at junit.framework.TestSuite.run(TestSuite.java:225)
	at
       junit.framework.TestSuite.runTest(TestSuite.java:230)
	at
       junit.framework.TestSuite.run(TestSuite.java:225)
	at aQute.junit.Activator.test(Activator.java:226)
      
	at aQute.junit.Activator.automatic(Activator.java:118)
	at
       aQute.junit.Activator.run(Activator.java:59)
    </system-err>
  </testcase>
  <testcase name='testFactoryRecursion' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testWrongClass' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testNullService' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testManyRegistrations' time='0.45' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testServiceReferenceCompare01' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testModifiedRanking' time='0.0' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testUnfilteredServiceListener01' time='0.1' classname='org.osgi.test.cases.framework.junit.service.ServiceRegistryTests'/>
  <testcase name='testSignatures' time='0.65' classname='org.osgi.test.cases.framework.junit.signature.SignatureTestCase'>
    <system-out>
      #Checking class: org.osgi.framework.AdaptPermission
#visit
       org.osgi.framework.AdaptPermission.ADAPT Ljava/lang/String;
      
#visit org.osgi.framework.AdaptPermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.AdaptPermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Lorg/osgi/framework/Bundle;Ljava/lang/String;)V
      
#visit org.osgi.framework.AdaptPermission.implies (Ljava/security/Permission;)Z
      
#visit org.osgi.framework.AdaptPermission.getActions ()Ljava/lang/String;
      
#visit org.osgi.framework.AdaptPermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.AdaptPermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.AdaptPermission.hashCode
       ()I
#Checking class: org.osgi.framework.AdminPermission
#visit
       org.osgi.framework.AdminPermission.CLASS Ljava/lang/String;
      
#visit org.osgi.framework.AdminPermission.EXECUTE Ljava/lang/String;
      
#visit org.osgi.framework.AdminPermission.EXTENSIONLIFECYCLE
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.LIFECYCLE
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.LISTENER
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.METADATA
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.RESOLVE
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.RESOURCE
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.STARTLEVEL
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.CONTEXT
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.WEAVE
       Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.&amp;lt;init&amp;gt;
       ()V
#visit org.osgi.framework.AdminPermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.AdminPermission.&amp;lt;init&amp;gt;
       (Lorg/osgi/framework/Bundle;Ljava/lang/String;)V
#visit org.osgi.framework.AdminPermission.implies
       (Ljava/security/Permission;)Z
#visit org.osgi.framework.AdminPermission.getActions
       ()Ljava/lang/String;
#visit org.osgi.framework.AdminPermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.AdminPermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.AdminPermission.hashCode
       ()I
#Checking class: org.osgi.framework.AllServiceListener
      
#Checking class: org.osgi.framework.Bundle
#visit org.osgi.framework.Bundle.UNINSTALLED
       I
#visit org.osgi.framework.Bundle.INSTALLED I
#visit org.osgi.framework.Bundle.RESOLVED
       I
#visit org.osgi.framework.Bundle.STARTING I
#visit org.osgi.framework.Bundle.STOPPING
       I
#visit org.osgi.framework.Bundle.ACTIVE I
#visit org.osgi.framework.Bundle.START_TRANSIENT
       I
#visit org.osgi.framework.Bundle.START_ACTIVATION_POLICY
       I
#visit org.osgi.framework.Bundle.STOP_TRANSIENT I
#visit
       org.osgi.framework.Bundle.SIGNERS_ALL I
#visit org.osgi.framework.Bundle.SIGNERS_TRUSTED
       I
#visit org.osgi.framework.Bundle.getState ()I
#visit org.osgi.framework.Bundle.start
       (I)V
#visit org.osgi.framework.Bundle.start ()V
#visit org.osgi.framework.Bundle.stop
       (I)V
#visit org.osgi.framework.Bundle.stop ()V
#visit org.osgi.framework.Bundle.update
       (Ljava/io/InputStream;)V
#visit org.osgi.framework.Bundle.update
       ()V
#visit org.osgi.framework.Bundle.uninstall ()V
#visit
       org.osgi.framework.Bundle.getHeaders ()Ljava/util/Dictionary;
      
#visit org.osgi.framework.Bundle.getBundleId ()J
#visit org.osgi.framework.Bundle.getLocation
       ()Ljava/lang/String;
#visit org.osgi.framework.Bundle.getRegisteredServices
       ()[Lorg/osgi/framework/ServiceReference;
#visit org.osgi.framework.Bundle.getServicesInUse
       ()[Lorg/osgi/framework/ServiceReference;
#visit org.osgi.framework.Bundle.hasPermission
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.Bundle.getResource
       (Ljava/lang/String;)Ljava/net/URL;
#visit org.osgi.framework.Bundle.getHeaders
       (Ljava/lang/String;)Ljava/util/Dictionary;
#visit org.osgi.framework.Bundle.getSymbolicName
       ()Ljava/lang/String;
#visit org.osgi.framework.Bundle.loadClass
       (Ljava/lang/String;)Ljava/lang/Class;
#visit org.osgi.framework.Bundle.getResources
       (Ljava/lang/String;)Ljava/util/Enumeration;
#visit org.osgi.framework.Bundle.getEntryPaths
       (Ljava/lang/String;)Ljava/util/Enumeration;
#visit org.osgi.framework.Bundle.getEntry
       (Ljava/lang/String;)Ljava/net/URL;
#visit org.osgi.framework.Bundle.getLastModified
       ()J
#visit org.osgi.framework.Bundle.findEntries (Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/Enumeration;
      
#visit org.osgi.framework.Bundle.getBundleContext ()Lorg/osgi/framework/BundleContext;
      
#visit org.osgi.framework.Bundle.getSignerCertificates (I)Ljava/util/Map;
      
#visit org.osgi.framework.Bundle.getVersion ()Lorg/osgi/framework/Version;
      
#visit org.osgi.framework.Bundle.adapt (Ljava/lang/Class;)Ljava/lang/Object;
      
#visit org.osgi.framework.Bundle.getDataFile (Ljava/lang/String;)Ljava/io/File;
      
#Checking class: org.osgi.framework.BundleActivator
#visit
       org.osgi.framework.BundleActivator.start (Lorg/osgi/framework/BundleContext;)V
      
#visit org.osgi.framework.BundleActivator.stop (Lorg/osgi/framework/BundleContext;)V
      
#Checking class: org.osgi.framework.BundleContext
#visit org.osgi.framework.BundleContext.getProperty
       (Ljava/lang/String;)Ljava/lang/String;
#visit org.osgi.framework.BundleContext.getBundle
       ()Lorg/osgi/framework/Bundle;
#visit org.osgi.framework.BundleContext.installBundle
       (Ljava/lang/String;Ljava/io/InputStream;)Lorg/osgi/framework/Bundle;
      
#visit org.osgi.framework.BundleContext.installBundle (Ljava/lang/String;)Lorg/osgi/framework/Bundle;
      
#visit org.osgi.framework.BundleContext.getBundle (J)Lorg/osgi/framework/Bundle;
      
#visit org.osgi.framework.BundleContext.getBundles ()[Lorg/osgi/framework/Bundle;
      
#visit org.osgi.framework.BundleContext.addServiceListener
       (Lorg/osgi/framework/ServiceListener;Ljava/lang/String;)V
      
#visit org.osgi.framework.BundleContext.addServiceListener
       (Lorg/osgi/framework/ServiceListener;)V
#visit org.osgi.framework.BundleContext.removeServiceListener
       (Lorg/osgi/framework/ServiceListener;)V
#visit org.osgi.framework.BundleContext.addBundleListener
       (Lorg/osgi/framework/BundleListener;)V
#visit org.osgi.framework.BundleContext.removeBundleListener
       (Lorg/osgi/framework/BundleListener;)V
#visit org.osgi.framework.BundleContext.addFrameworkListener
       (Lorg/osgi/framework/FrameworkListener;)V
#visit org.osgi.framework.BundleContext.removeFrameworkListener
       (Lorg/osgi/framework/FrameworkListener;)V
#visit org.osgi.framework.BundleContext.registerService
       ([Ljava/lang/String;Ljava/lang/Object;Ljava/util/Dictionary;)Lorg/osgi/framework/ServiceRegistration;
      
#visit org.osgi.framework.BundleContext.registerService (Ljava/lang/String;Ljava/lang/Object;Ljava/util/Dictionary;)Lorg/osgi/framework/ServiceRegistration;
      
#visit org.osgi.framework.BundleContext.registerService (Ljava/lang/Class;Ljava/lang/Object;Ljava/util/Dictionary;)Lorg/osgi/framework/ServiceRegistration;
      
#visit org.osgi.framework.BundleContext.getServiceReferences
       (Ljava/lang/String;Ljava/lang/String;)[Lorg/osgi/framework/ServiceReference;
      
#visit org.osgi.framework.BundleContext.getAllServiceReferences
       (Ljava/lang/String;Ljava/lang/String;)[Lorg/osgi/framework/ServiceReference;
      
#visit org.osgi.framework.BundleContext.getServiceReference
       (Ljava/lang/String;)Lorg/osgi/framework/ServiceReference;
      
#visit org.osgi.framework.BundleContext.getServiceReference
       (Ljava/lang/Class;)Lorg/osgi/framework/ServiceReference;
#visit
       org.osgi.framework.BundleContext.getServiceReferences (Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Collection;
      
#visit org.osgi.framework.BundleContext.getService (Lorg/osgi/framework/ServiceReference;)Ljava/lang/Object;
      
#visit org.osgi.framework.BundleContext.ungetService (Lorg/osgi/framework/ServiceReference;)Z
      
#visit org.osgi.framework.BundleContext.getDataFile (Ljava/lang/String;)Ljava/io/File;
      
#visit org.osgi.framework.BundleContext.createFilter (Ljava/lang/String;)Lorg/osgi/framework/Filter;
      
#visit org.osgi.framework.BundleContext.getBundle (Ljava/lang/String;)Lorg/osgi/framework/Bundle;
      
#Checking class: org.osgi.framework.BundleEvent
#visit org.osgi.framework.BundleEvent.INSTALLED
       I
#visit org.osgi.framework.BundleEvent.STARTED I
#visit org.osgi.framework.BundleEvent.STOPPED
       I
#visit org.osgi.framework.BundleEvent.UPDATED I
#visit org.osgi.framework.BundleEvent.UNINSTALLED
       I
#visit org.osgi.framework.BundleEvent.RESOLVED I
#visit
       org.osgi.framework.BundleEvent.UNRESOLVED I
#visit org.osgi.framework.BundleEvent.STARTING
       I
#visit org.osgi.framework.BundleEvent.STOPPING I
#visit
       org.osgi.framework.BundleEvent.LAZY_ACTIVATION I
#visit org.osgi.framework.BundleEvent.&amp;lt;init&amp;gt;
       (ILorg/osgi/framework/Bundle;Lorg/osgi/framework/Bundle;)V
      
#visit org.osgi.framework.BundleEvent.&amp;lt;init&amp;gt;
       (ILorg/osgi/framework/Bundle;)V
#visit org.osgi.framework.BundleEvent.getBundle
       ()Lorg/osgi/framework/Bundle;
#visit org.osgi.framework.BundleEvent.getType
       ()I
#visit org.osgi.framework.BundleEvent.getOrigin ()Lorg/osgi/framework/Bundle;
      
#Checking class: org.osgi.framework.BundleException
#visit
       org.osgi.framework.BundleException.UNSPECIFIED I
#visit org.osgi.framework.BundleException.UNSUPPORTED_OPERATION
       I
#visit org.osgi.framework.BundleException.INVALID_OPERATION
       I
#visit org.osgi.framework.BundleException.MANIFEST_ERROR
       I
#visit org.osgi.framework.BundleException.RESOLVE_ERROR
       I
#visit org.osgi.framework.BundleException.ACTIVATOR_ERROR
       I
#visit org.osgi.framework.BundleException.SECURITY_ERROR
       I
#visit org.osgi.framework.BundleException.STATECHANGE_ERROR
       I
#visit org.osgi.framework.BundleException.NATIVECODE_ERROR
       I
#visit org.osgi.framework.BundleException.DUPLICATE_BUNDLE_ERROR
       I
#visit org.osgi.framework.BundleException.START_TRANSIENT_ERROR
       I
#visit org.osgi.framework.BundleException.READ_ERROR I
#visit
       org.osgi.framework.BundleException.REJECTED_BY_HOOK I
#visit
       org.osgi.framework.BundleException.&amp;lt;init&amp;gt; (Ljava/lang/String;Ljava/lang/Throwable;)V
      
#visit org.osgi.framework.BundleException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;)V
#visit org.osgi.framework.BundleException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;ILjava/lang/Throwable;)V
#visit org.osgi.framework.BundleException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;I)V
#visit org.osgi.framework.BundleException.getNestedException
       ()Ljava/lang/Throwable;
#visit org.osgi.framework.BundleException.getCause
       ()Ljava/lang/Throwable;
#visit org.osgi.framework.BundleException.initCause
       (Ljava/lang/Throwable;)Ljava/lang/Throwable;
#visit org.osgi.framework.BundleException.getType
       ()I
#Checking class: org.osgi.framework.BundleListener
#visit
       org.osgi.framework.BundleListener.bundleChanged (Lorg/osgi/framework/BundleEvent;)V
      
#Checking class: org.osgi.framework.BundlePermission
#visit
       org.osgi.framework.BundlePermission.PROVIDE Ljava/lang/String;
      
#visit org.osgi.framework.BundlePermission.REQUIRE Ljava/lang/String;
      
#visit org.osgi.framework.BundlePermission.HOST Ljava/lang/String;
      
#visit org.osgi.framework.BundlePermission.FRAGMENT Ljava/lang/String;
      
#visit org.osgi.framework.BundlePermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.BundlePermission.implies
       (Ljava/security/Permission;)Z
#visit org.osgi.framework.BundlePermission.getActions
       ()Ljava/lang/String;
#visit org.osgi.framework.BundlePermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.BundlePermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.BundlePermission.hashCode
       ()I
#Checking class: org.osgi.framework.BundleReference
#visit
       org.osgi.framework.BundleReference.getBundle ()Lorg/osgi/framework/Bundle;
      
#Checking class: org.osgi.framework.CapabilityPermission
#visit
       org.osgi.framework.CapabilityPermission.REQUIRE Ljava/lang/String;
      
#visit org.osgi.framework.CapabilityPermission.PROVIDE Ljava/lang/String;
      
#visit org.osgi.framework.CapabilityPermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.CapabilityPermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/util/Map;Lorg/osgi/framework/Bundle;Ljava/lang/String;)V
      
#visit org.osgi.framework.CapabilityPermission.implies (Ljava/security/Permission;)Z
      
#visit org.osgi.framework.CapabilityPermission.getActions
       ()Ljava/lang/String;
#visit org.osgi.framework.CapabilityPermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.CapabilityPermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.CapabilityPermission.hashCode
       ()I
#Checking class: org.osgi.framework.Configurable
#visit
       org.osgi.framework.Configurable.getConfigurationObject ()Ljava/lang/Object;
      
#Checking class: org.osgi.framework.Constants
#visit org.osgi.framework.Constants.SYSTEM_BUNDLE_LOCATION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SYSTEM_BUNDLE_SYMBOLICNAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_CATEGORY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_CLASSPATH
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_COPYRIGHT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_DESCRIPTION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NATIVECODE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXPORT_PACKAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXPORT_SERVICE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.IMPORT_PACKAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.DYNAMICIMPORT_PACKAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.IMPORT_SERVICE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_VENDOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_VERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_DOCURL
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_CONTACTADDRESS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_ACTIVATOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_UPDATELOCATION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.PACKAGE_SPECIFICATION_VERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NATIVECODE_PROCESSOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NATIVECODE_OSNAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NATIVECODE_OSVERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_NATIVECODE_LANGUAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_REQUIREDEXECUTIONENVIRONMENT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_SYMBOLICNAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SINGLETON_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAGMENT_ATTACHMENT_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAGMENT_ATTACHMENT_ALWAYS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAGMENT_ATTACHMENT_RESOLVETIME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAGMENT_ATTACHMENT_NEVER
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_LOCALIZATION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_LOCALIZATION_DEFAULT_BASENAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.REQUIRE_BUNDLE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_VERSION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAGMENT_HOST
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SELECTION_FILTER_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_MANIFESTVERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.VERSION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_SYMBOLICNAME_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.RESOLUTION_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.RESOLUTION_MANDATORY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.RESOLUTION_OPTIONAL
       Ljava/lang/String;
#visit org.osgi.framework.Constants.USES_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.INCLUDE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXCLUDE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.MANDATORY_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.VISIBILITY_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.VISIBILITY_PRIVATE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.VISIBILITY_REEXPORT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXTENSION_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXTENSION_FRAMEWORK
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EXTENSION_BOOTCLASSPATH
       Ljava/lang/String;
#visit org.osgi.framework.Constants.BUNDLE_ACTIVATIONPOLICY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.ACTIVATION_LAZY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_VERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_VENDOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_LANGUAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_OS_NAME
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_OS_VERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_PROCESSOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_EXECUTIONENVIRONMENT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BOOTDELEGATION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SYSTEMPACKAGES
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SYSTEMPACKAGES_EXTRA
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SUPPORTS_FRAMEWORK_EXTENSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SUPPORTS_BOOTCLASSPATH_EXTENSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SUPPORTS_FRAMEWORK_FRAGMENT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SUPPORTS_FRAMEWORK_REQUIREBUNDLE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SECURITY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SECURITY_OSGI
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_STORAGE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_STORAGE_CLEAN
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_STORAGE_CLEAN_ONFIRSTINIT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_LIBRARY_EXTENSIONS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_EXECPERMISSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_COMMAND_ABSPATH
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_TRUST_REPOSITORIES
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_WINDOWSYSTEM
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BEGINNING_STARTLEVEL
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BUNDLE_PARENT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BUNDLE_PARENT_BOOT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BUNDLE_PARENT_EXT
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BUNDLE_PARENT_APP
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BUNDLE_PARENT_FRAMEWORK
       Ljava/lang/String;
#visit org.osgi.framework.Constants.OBJECTCLASS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_ID
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_PID
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_RANKING
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_VENDOR
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_DESCRIPTION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_UUID
       Ljava/lang/String;
#visit org.osgi.framework.Constants.REMOTE_CONFIGS_SUPPORTED
       Ljava/lang/String;
#visit org.osgi.framework.Constants.REMOTE_INTENTS_SUPPORTED
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_EXPORTED_CONFIGS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_EXPORTED_INTENTS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_EXPORTED_INTENTS_EXTRA
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_EXPORTED_INTERFACES
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_IMPORTED
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_IMPORTED_CONFIGS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.SERVICE_INTENTS
       Ljava/lang/String;
#visit org.osgi.framework.Constants.PROVIDE_CAPABILITY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.REQUIRE_CAPABILITY
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EFFECTIVE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EFFECTIVE_RESOLVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.EFFECTIVE_ACTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FILTER_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SYSTEMCAPABILITIES
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_SYSTEMCAPABILITIES_EXTRA
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BSNVERSION
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BSNVERSION_MULTIPLE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BSNVERSION_SINGLE
       Ljava/lang/String;
#visit org.osgi.framework.Constants.FRAMEWORK_BSNVERSION_MANAGED
       Ljava/lang/String;
#Checking class: org.osgi.framework.Filter
      
#visit org.osgi.framework.Filter.match (Lorg/osgi/framework/ServiceReference;)Z
      
#visit org.osgi.framework.Filter.match (Ljava/util/Dictionary;)Z
      
#visit org.osgi.framework.Filter.toString ()Ljava/lang/String;
      
#visit org.osgi.framework.Filter.equals (Ljava/lang/Object;)Z
      
#visit org.osgi.framework.Filter.hashCode ()I
#visit org.osgi.framework.Filter.matchCase
       (Ljava/util/Dictionary;)Z
#visit org.osgi.framework.Filter.matches
       (Ljava/util/Map;)Z
#Checking class: org.osgi.framework.FrameworkEvent
      
#visit org.osgi.framework.FrameworkEvent.STARTED I
#visit
       org.osgi.framework.FrameworkEvent.ERROR I
#visit org.osgi.framework.FrameworkEvent.PACKAGES_REFRESHED
       I
#visit org.osgi.framework.FrameworkEvent.STARTLEVEL_CHANGED
       I
#visit org.osgi.framework.FrameworkEvent.WARNING I
#visit
       org.osgi.framework.FrameworkEvent.INFO I
#visit org.osgi.framework.FrameworkEvent.STOPPED
       I
#visit org.osgi.framework.FrameworkEvent.STOPPED_UPDATE
       I
#visit org.osgi.framework.FrameworkEvent.STOPPED_BOOTCLASSPATH_MODIFIED
       I
#visit org.osgi.framework.FrameworkEvent.WAIT_TIMEDOUT I
      
#visit org.osgi.framework.FrameworkEvent.&amp;lt;init&amp;gt;
       (ILjava/lang/Object;)V
#visit org.osgi.framework.FrameworkEvent.&amp;lt;init&amp;gt;
       (ILorg/osgi/framework/Bundle;Ljava/lang/Throwable;)V
#visit
       org.osgi.framework.FrameworkEvent.getThrowable ()Ljava/lang/Throwable;
      
#visit org.osgi.framework.FrameworkEvent.getBundle ()Lorg/osgi/framework/Bundle;
      
#visit org.osgi.framework.FrameworkEvent.getType ()I
#Checking
       class: org.osgi.framework.FrameworkListener
#visit org.osgi.framework.FrameworkListener.frameworkEvent
       (Lorg/osgi/framework/FrameworkEvent;)V
#Checking class: org.osgi.framework.FrameworkUtil
      
#visit org.osgi.framework.FrameworkUtil.createFilter (Ljava/lang/String;)Lorg/osgi/framework/Filter;
      
#visit org.osgi.framework.FrameworkUtil.matchDistinguishedNameChain
       (Ljava/lang/String;Ljava/util/List;)Z
#visit org.osgi.framework.FrameworkUtil.getBundle
       (Ljava/lang/Class;)Lorg/osgi/framework/Bundle;
#Checking class:
       org.osgi.framework.InvalidSyntaxException
#visit org.osgi.framework.InvalidSyntaxException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.InvalidSyntaxException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      
#visit org.osgi.framework.InvalidSyntaxException.getFilter
       ()Ljava/lang/String;
#visit org.osgi.framework.InvalidSyntaxException.getCause
       ()Ljava/lang/Throwable;
#visit org.osgi.framework.InvalidSyntaxException.initCause
       (Ljava/lang/Throwable;)Ljava/lang/Throwable;
#Checking class:
       org.osgi.framework.PackagePermission
#visit org.osgi.framework.PackagePermission.EXPORT
       Ljava/lang/String;
#visit org.osgi.framework.PackagePermission.EXPORTONLY
       Ljava/lang/String;
#visit org.osgi.framework.PackagePermission.IMPORT
       Ljava/lang/String;
#visit org.osgi.framework.PackagePermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.PackagePermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Lorg/osgi/framework/Bundle;Ljava/lang/String;)V
      
#visit org.osgi.framework.PackagePermission.implies (Ljava/security/Permission;)Z
      
#visit org.osgi.framework.PackagePermission.getActions ()Ljava/lang/String;
      
#visit org.osgi.framework.PackagePermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.PackagePermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.PackagePermission.hashCode
       ()I
#Checking class: org.osgi.framework.ServiceEvent
#visit
       org.osgi.framework.ServiceEvent.REGISTERED I
#visit org.osgi.framework.ServiceEvent.MODIFIED
       I
#visit org.osgi.framework.ServiceEvent.UNREGISTERING I
#visit
       org.osgi.framework.ServiceEvent.MODIFIED_ENDMATCH I
#visit
       org.osgi.framework.ServiceEvent.&amp;lt;init&amp;gt; (ILorg/osgi/framework/ServiceReference;)V
      
#visit org.osgi.framework.ServiceEvent.getServiceReference
       ()Lorg/osgi/framework/ServiceReference;
#visit org.osgi.framework.ServiceEvent.getType
       ()I
#Checking class: org.osgi.framework.ServiceException
#visit
       org.osgi.framework.ServiceException.UNSPECIFIED I
#visit org.osgi.framework.ServiceException.UNREGISTERED
       I
#visit org.osgi.framework.ServiceException.FACTORY_ERROR
       I
#visit org.osgi.framework.ServiceException.FACTORY_EXCEPTION
       I
#visit org.osgi.framework.ServiceException.SUBCLASSED I
      
#visit org.osgi.framework.ServiceException.REMOTE I
#visit
       org.osgi.framework.ServiceException.FACTORY_RECURSION I
#visit
       org.osgi.framework.ServiceException.&amp;lt;init&amp;gt; (Ljava/lang/String;Ljava/lang/Throwable;)V
      
#visit org.osgi.framework.ServiceException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;)V
#visit org.osgi.framework.ServiceException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;ILjava/lang/Throwable;)V
#visit org.osgi.framework.ServiceException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;I)V
#visit org.osgi.framework.ServiceException.getType
       ()I
#Checking class: org.osgi.framework.ServiceFactory
#visit
       org.osgi.framework.ServiceFactory.getService (Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;)Ljava/lang/Object;
      
#visit org.osgi.framework.ServiceFactory.ungetService (Lorg/osgi/framework/Bundle;Lorg/osgi/framework/ServiceRegistration;Ljava/lang/Object;)V
      
#Checking class: org.osgi.framework.ServiceListener
#visit
       org.osgi.framework.ServiceListener.serviceChanged (Lorg/osgi/framework/ServiceEvent;)V
      
#Checking class: org.osgi.framework.ServicePermission
#visit
       org.osgi.framework.ServicePermission.GET Ljava/lang/String;
      
#visit org.osgi.framework.ServicePermission.REGISTER Ljava/lang/String;
      
#visit org.osgi.framework.ServicePermission.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/String;)V
#visit org.osgi.framework.ServicePermission.&amp;lt;init&amp;gt;
       (Lorg/osgi/framework/ServiceReference;Ljava/lang/String;)V
      
#visit org.osgi.framework.ServicePermission.implies (Ljava/security/Permission;)Z
      
#visit org.osgi.framework.ServicePermission.getActions ()Ljava/lang/String;
      
#visit org.osgi.framework.ServicePermission.newPermissionCollection
       ()Ljava/security/PermissionCollection;
#visit org.osgi.framework.ServicePermission.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.ServicePermission.hashCode
       ()I
#Checking class: org.osgi.framework.ServiceReference
#visit
       org.osgi.framework.ServiceReference.getProperty (Ljava/lang/String;)Ljava/lang/Object;
      
#visit org.osgi.framework.ServiceReference.getPropertyKeys
       ()[Ljava/lang/String;
#visit org.osgi.framework.ServiceReference.getBundle
       ()Lorg/osgi/framework/Bundle;
#visit org.osgi.framework.ServiceReference.getUsingBundles
       ()[Lorg/osgi/framework/Bundle;
#visit org.osgi.framework.ServiceReference.isAssignableTo
       (Lorg/osgi/framework/Bundle;Ljava/lang/String;)Z
#visit org.osgi.framework.ServiceReference.compareTo
       (Ljava/lang/Object;)I
#Checking class: org.osgi.framework.ServiceRegistration
      
#visit org.osgi.framework.ServiceRegistration.getReference
       ()Lorg/osgi/framework/ServiceReference;
#visit org.osgi.framework.ServiceRegistration.setProperties
       (Ljava/util/Dictionary;)V
#visit org.osgi.framework.ServiceRegistration.unregister
       ()V
#Checking class: org.osgi.framework.SynchronousBundleListener
      
#Checking class: org.osgi.framework.UnfilteredServiceListener
      
#Checking class: org.osgi.framework.Version
#visit org.osgi.framework.Version.emptyVersion
       Lorg/osgi/framework/Version;
#visit org.osgi.framework.Version.&amp;lt;init&amp;gt;
       (III)V
#visit org.osgi.framework.Version.&amp;lt;init&amp;gt;
       (IIILjava/lang/String;)V
#visit org.osgi.framework.Version.&amp;lt;init&amp;gt;
       (Ljava/lang/String;)V
#visit org.osgi.framework.Version.parseVersion
       (Ljava/lang/String;)Lorg/osgi/framework/Version;
#visit org.osgi.framework.Version.getMajor
       ()I
#visit org.osgi.framework.Version.getMinor ()I
#visit
       org.osgi.framework.Version.getMicro ()I
#visit org.osgi.framework.Version.getQualifier
       ()Ljava/lang/String;
#visit org.osgi.framework.Version.toString
       ()Ljava/lang/String;
#visit org.osgi.framework.Version.hashCode
       ()I
#visit org.osgi.framework.Version.equals (Ljava/lang/Object;)Z
      
#visit org.osgi.framework.Version.compareTo (Lorg/osgi/framework/Version;)I
      
#visit org.osgi.framework.Version.compareTo (Ljava/lang/Object;)I
      
#Checking class: org.osgi.framework.VersionRange
#visit org.osgi.framework.VersionRange.LEFT_OPEN
       C
#visit org.osgi.framework.VersionRange.LEFT_CLOSED C
#visit
       org.osgi.framework.VersionRange.RIGHT_OPEN C
#visit org.osgi.framework.VersionRange.RIGHT_CLOSED
       C
#visit org.osgi.framework.VersionRange.&amp;lt;init&amp;gt;
       (CLorg/osgi/framework/Version;Lorg/osgi/framework/Version;C)V
      
#visit org.osgi.framework.VersionRange.&amp;lt;init&amp;gt;
       (Ljava/lang/String;)V
#visit org.osgi.framework.VersionRange.getLeft
       ()Lorg/osgi/framework/Version;
#visit org.osgi.framework.VersionRange.getRight
       ()Lorg/osgi/framework/Version;
#visit org.osgi.framework.VersionRange.getLeftType
       ()C
#visit org.osgi.framework.VersionRange.getRightType ()C
      
#visit org.osgi.framework.VersionRange.includes (Lorg/osgi/framework/Version;)Z
      
#visit org.osgi.framework.VersionRange.intersection ([Lorg/osgi/framework/VersionRange;)Lorg/osgi/framework/VersionRange;
      
#visit org.osgi.framework.VersionRange.isEmpty ()Z
#visit
       org.osgi.framework.VersionRange.isExact ()Z
#visit org.osgi.framework.VersionRange.toString
       ()Ljava/lang/String;
#visit org.osgi.framework.VersionRange.hashCode
       ()I
#visit org.osgi.framework.VersionRange.equals (Ljava/lang/Object;)Z
      
#visit org.osgi.framework.VersionRange.toFilterString (Ljava/lang/String;)Ljava/lang/String;
      
#Checking class: org.osgi.framework.hooks.bundle.CollisionHook
      
#visit org.osgi.framework.hooks.bundle.CollisionHook.INSTALLING
       I
#visit org.osgi.framework.hooks.bundle.CollisionHook.UPDATING
       I
#visit org.osgi.framework.hooks.bundle.CollisionHook.filterCollisions
       (ILorg/osgi/framework/Bundle;Ljava/util/Collection;)V
#Checking
       class: org.osgi.framework.hooks.bundle.EventHook
#visit org.osgi.framework.hooks.bundle.EventHook.event
       (Lorg/osgi/framework/BundleEvent;Ljava/util/Collection;)V
      
#Checking class: org.osgi.framework.hooks.bundle.FindHook
      
#visit org.osgi.framework.hooks.bundle.FindHook.find (Lorg/osgi/framework/BundleContext;Ljava/util/Collection;)V
      
#Checking class: org.osgi.framework.hooks.resolver.ResolverHook
      
#visit org.osgi.framework.hooks.resolver.ResolverHook.filterResolvable
       (Ljava/util/Collection;)V
#visit org.osgi.framework.hooks.resolver.ResolverHook.filterSingletonCollisions
       (Lorg/osgi/framework/wiring/BundleCapability;Ljava/util/Collection;)V
      
#visit org.osgi.framework.hooks.resolver.ResolverHook.filterMatches
       (Lorg/osgi/framework/wiring/BundleRequirement;Ljava/util/Collection;)V
      
#visit org.osgi.framework.hooks.resolver.ResolverHook.end
       ()V
#Checking class: org.osgi.framework.hooks.resolver.ResolverHookFactory
      
#visit org.osgi.framework.hooks.resolver.ResolverHookFactory.begin
       (Ljava/util/Collection;)Lorg/osgi/framework/hooks/resolver/ResolverHook;
      
#Checking class: org.osgi.framework.hooks.service.EventHook
      
#visit org.osgi.framework.hooks.service.EventHook.event (Lorg/osgi/framework/ServiceEvent;Ljava/util/Collection;)V
      
#Checking class: org.osgi.framework.hooks.service.EventListenerHook
      
#visit org.osgi.framework.hooks.service.EventListenerHook.event
       (Lorg/osgi/framework/ServiceEvent;Ljava/util/Map;)V
#Checking
       class: org.osgi.framework.hooks.service.FindHook
#visit org.osgi.framework.hooks.service.FindHook.find
       (Lorg/osgi/framework/BundleContext;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Collection;)V
      
#Checking class: org.osgi.framework.hooks.service.ListenerHook
      
#visit org.osgi.framework.hooks.service.ListenerHook.added
       (Ljava/util/Collection;)V
#visit org.osgi.framework.hooks.service.ListenerHook.removed
       (Ljava/util/Collection;)V
#Checking class: org.osgi.framework.hooks.service.ListenerHook$ListenerInfo
      
#visit org.osgi.framework.hooks.service.ListenerHook$ListenerInfo.getBundleContext
       ()Lorg/osgi/framework/BundleContext;
#visit org.osgi.framework.hooks.service.ListenerHook$ListenerInfo.getFilter
       ()Ljava/lang/String;
#visit org.osgi.framework.hooks.service.ListenerHook$ListenerInfo.isRemoved
       ()Z
#visit org.osgi.framework.hooks.service.ListenerHook$ListenerInfo.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.framework.hooks.service.ListenerHook$ListenerInfo.hashCode
       ()I
#Checking class: org.osgi.framework.hooks.weaving.WeavingException
      
#visit org.osgi.framework.hooks.weaving.WeavingException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;Ljava/lang/Throwable;)V
#visit org.osgi.framework.hooks.weaving.WeavingException.&amp;lt;init&amp;gt;
       (Ljava/lang/String;)V
#Checking class: org.osgi.framework.hooks.weaving.WeavingHook
      
#visit org.osgi.framework.hooks.weaving.WeavingHook.weave
       (Lorg/osgi/framework/hooks/weaving/WovenClass;)V
#Checking
       class: org.osgi.framework.hooks.weaving.WovenClass
#visit
       org.osgi.framework.hooks.weaving.WovenClass.getBytes ()[B
      
#visit org.osgi.framework.hooks.weaving.WovenClass.setBytes
       ([B)V
#visit org.osgi.framework.hooks.weaving.WovenClass.getDynamicImports
       ()Ljava/util/List;
#visit org.osgi.framework.hooks.weaving.WovenClass.isWeavingComplete
       ()Z
#visit org.osgi.framework.hooks.weaving.WovenClass.getClassName
       ()Ljava/lang/String;
#visit org.osgi.framework.hooks.weaving.WovenClass.getProtectionDomain
       ()Ljava/security/ProtectionDomain;
#visit org.osgi.framework.hooks.weaving.WovenClass.getDefinedClass
       ()Ljava/lang/Class;
#visit org.osgi.framework.hooks.weaving.WovenClass.getBundleWiring
       ()Lorg/osgi/framework/wiring/BundleWiring;
#Checking class:
       org.osgi.framework.namespace.AbstractWiringNamespace
#visit
       org.osgi.framework.namespace.AbstractWiringNamespace.CAPABILITY_MANDATORY_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.AbstractWiringNamespace.CAPABILITY_BUNDLE_VERSION_ATTRIBUTE
       Ljava/lang/String;
#Checking class: org.osgi.framework.namespace.BundleNamespace
      
#visit org.osgi.framework.namespace.BundleNamespace.BUNDLE_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.CAPABILITY_SINGLETON_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.CAPABILITY_FRAGMENT_ATTACHMENT_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.REQUIREMENT_EXTENSION_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.REQUIREMENT_VISIBILITY_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.VISIBILITY_PRIVATE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.BundleNamespace.VISIBILITY_REEXPORT
       Ljava/lang/String;
#Checking class: org.osgi.framework.namespace.ExecutionEnvironmentNamespace
      
#visit org.osgi.framework.namespace.ExecutionEnvironmentNamespace.EXECUTION_ENVIRONMENT_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.ExecutionEnvironmentNamespace.CAPABILITY_VERSION_ATTRIBUTE
       Ljava/lang/String;
#Checking class: org.osgi.framework.namespace.HostNamespace
      
#visit org.osgi.framework.namespace.HostNamespace.HOST_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.CAPABILITY_SINGLETON_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.CAPABILITY_FRAGMENT_ATTACHMENT_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.FRAGMENT_ATTACHMENT_ALWAYS
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.FRAGMENT_ATTACHMENT_RESOLVETIME
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.FRAGMENT_ATTACHMENT_NEVER
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.REQUIREMENT_EXTENSION_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.EXTENSION_FRAMEWORK
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.EXTENSION_BOOTCLASSPATH
       Ljava/lang/String;
#visit org.osgi.framework.namespace.HostNamespace.REQUIREMENT_VISIBILITY_DIRECTIVE
       Ljava/lang/String;
#Checking class: org.osgi.framework.namespace.IdentityNamespace
      
#visit org.osgi.framework.namespace.IdentityNamespace.IDENTITY_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_SINGLETON_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_VERSION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_TYPE_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.TYPE_BUNDLE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.TYPE_FRAGMENT
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.TYPE_UNKNOWN
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_COPYRIGHT_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_DESCRIPTION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_DOCUMENTATION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CAPABILITY_LICENSE_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.REQUIREMENT_CLASSIFIER_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CLASSIFIER_SOURCES
       Ljava/lang/String;
#visit org.osgi.framework.namespace.IdentityNamespace.CLASSIFIER_JAVADOC
       Ljava/lang/String;
#Checking class: org.osgi.framework.namespace.PackageNamespace
      
#visit org.osgi.framework.namespace.PackageNamespace.PACKAGE_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.PackageNamespace.CAPABILITY_INCLUDE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.PackageNamespace.CAPABILITY_EXCLUDE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.PackageNamespace.CAPABILITY_VERSION_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.PackageNamespace.CAPABILITY_BUNDLE_SYMBOLICNAME_ATTRIBUTE
       Ljava/lang/String;
#visit org.osgi.framework.namespace.PackageNamespace.RESOLUTION_DYNAMIC
       Ljava/lang/String;
#Checking class: org.osgi.framework.startlevel.BundleStartLevel
      
#visit org.osgi.framework.startlevel.BundleStartLevel.getStartLevel
       ()I
#visit org.osgi.framework.startlevel.BundleStartLevel.setStartLevel
       (I)V
#visit org.osgi.framework.startlevel.BundleStartLevel.isPersistentlyStarted
       ()Z
#visit org.osgi.framework.startlevel.BundleStartLevel.isActivationPolicyUsed
       ()Z
#Checking class: org.osgi.framework.startlevel.FrameworkStartLevel
      
#visit org.osgi.framework.startlevel.FrameworkStartLevel.getStartLevel
       ()I
#visit org.osgi.framework.startlevel.FrameworkStartLevel.setStartLevel
       (I[Lorg/osgi/framework/FrameworkListener;)V
#visit org.osgi.framework.startlevel.FrameworkStartLevel.getInitialBundleStartLevel
       ()I
#visit org.osgi.framework.startlevel.FrameworkStartLevel.setInitialBundleStartLevel
       (I)V
#Checking class: org.osgi.framework.wiring.BundleCapability
      
#visit org.osgi.framework.wiring.BundleCapability.getRevision
       ()Lorg/osgi/framework/wiring/BundleRevision;
#visit org.osgi.framework.wiring.BundleCapability.getNamespace
       ()Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleCapability.getDirectives
       ()Ljava/util/Map;
#visit org.osgi.framework.wiring.BundleCapability.getAttributes
       ()Ljava/util/Map;
#visit org.osgi.framework.wiring.BundleCapability.getResource
       ()Lorg/osgi/framework/wiring/BundleRevision;
#Checking class:
       org.osgi.framework.wiring.BundleRequirement
#visit org.osgi.framework.wiring.BundleRequirement.getRevision
       ()Lorg/osgi/framework/wiring/BundleRevision;
#visit org.osgi.framework.wiring.BundleRequirement.matches
       (Lorg/osgi/framework/wiring/BundleCapability;)Z
#visit org.osgi.framework.wiring.BundleRequirement.getNamespace
       ()Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleRequirement.getDirectives
       ()Ljava/util/Map;
#visit org.osgi.framework.wiring.BundleRequirement.getAttributes
       ()Ljava/util/Map;
#visit org.osgi.framework.wiring.BundleRequirement.getResource
       ()Lorg/osgi/framework/wiring/BundleRevision;
#Checking class:
       org.osgi.framework.wiring.BundleRevision
#visit org.osgi.framework.wiring.BundleRevision.PACKAGE_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleRevision.BUNDLE_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleRevision.HOST_NAMESPACE
       Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleRevision.TYPE_FRAGMENT
       I
#visit org.osgi.framework.wiring.BundleRevision.getSymbolicName
       ()Ljava/lang/String;
#visit org.osgi.framework.wiring.BundleRevision.getVersion
       ()Lorg/osgi/framework/Version;
#visit org.osgi.framework.wiring.BundleRevision.getDeclaredCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleRevision.getDeclaredRequirements
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleRevision.getTypes
       ()I
#visit org.osgi.framework.wiring.BundleRevision.getWiring
       ()Lorg/osgi/framework/wiring/BundleWiring;
#visit org.osgi.framework.wiring.BundleRevision.getCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleRevision.getRequirements
       (Ljava/lang/String;)Ljava/util/List;
#Checking class: org.osgi.framework.wiring.BundleRevisions
      
#visit org.osgi.framework.wiring.BundleRevisions.getRevisions
       ()Ljava/util/List;
#Checking class: org.osgi.framework.wiring.BundleWire
      
#visit org.osgi.framework.wiring.BundleWire.getCapability
       ()Lorg/osgi/framework/wiring/BundleCapability;
#visit org.osgi.framework.wiring.BundleWire.getRequirement
       ()Lorg/osgi/framework/wiring/BundleRequirement;
#visit org.osgi.framework.wiring.BundleWire.getProviderWiring
       ()Lorg/osgi/framework/wiring/BundleWiring;
#visit org.osgi.framework.wiring.BundleWire.getRequirerWiring
       ()Lorg/osgi/framework/wiring/BundleWiring;
#visit org.osgi.framework.wiring.BundleWire.getProvider
       ()Lorg/osgi/framework/wiring/BundleRevision;
#visit org.osgi.framework.wiring.BundleWire.getRequirer
       ()Lorg/osgi/framework/wiring/BundleRevision;
#Checking class:
       org.osgi.framework.wiring.BundleWiring
#visit org.osgi.framework.wiring.BundleWiring.FINDENTRIES_RECURSE
       I
#visit org.osgi.framework.wiring.BundleWiring.LISTRESOURCES_RECURSE
       I
#visit org.osgi.framework.wiring.BundleWiring.LISTRESOURCES_LOCAL
       I
#visit org.osgi.framework.wiring.BundleWiring.isCurrent
       ()Z
#visit org.osgi.framework.wiring.BundleWiring.isInUse
       ()Z
#visit org.osgi.framework.wiring.BundleWiring.getCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getRequirements
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getProvidedWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getRequiredWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getRevision
       ()Lorg/osgi/framework/wiring/BundleRevision;
#visit org.osgi.framework.wiring.BundleWiring.getClassLoader
       ()Ljava/lang/ClassLoader;
#visit org.osgi.framework.wiring.BundleWiring.findEntries
       (Ljava/lang/String;Ljava/lang/String;I)Ljava/util/List;
#visit
       org.osgi.framework.wiring.BundleWiring.listResources (Ljava/lang/String;Ljava/lang/String;I)Ljava/util/Collection;
      
#visit org.osgi.framework.wiring.BundleWiring.getResourceCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getResourceRequirements
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getProvidedResourceWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getRequiredResourceWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.framework.wiring.BundleWiring.getResource
       ()Lorg/osgi/framework/wiring/BundleRevision;
#Checking class:
       org.osgi.framework.wiring.FrameworkWiring
#visit org.osgi.framework.wiring.FrameworkWiring.refreshBundles
       (Ljava/util/Collection;[Lorg/osgi/framework/FrameworkListener;)V
      
#visit org.osgi.framework.wiring.FrameworkWiring.resolveBundles
       (Ljava/util/Collection;)Z
#visit org.osgi.framework.wiring.FrameworkWiring.getRemovalPendingBundles
       ()Ljava/util/Collection;
#visit org.osgi.framework.wiring.FrameworkWiring.getDependencyClosure
       (Ljava/util/Collection;)Ljava/util/Collection;
#Checking class:
       org.osgi.resource.Capability
#visit org.osgi.resource.Capability.getNamespace
       ()Ljava/lang/String;
#visit org.osgi.resource.Capability.getDirectives
       ()Ljava/util/Map;
#visit org.osgi.resource.Capability.getAttributes
       ()Ljava/util/Map;
#visit org.osgi.resource.Capability.getResource
       ()Lorg/osgi/resource/Resource;
#visit org.osgi.resource.Capability.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.resource.Capability.hashCode
       ()I
#Checking class: org.osgi.resource.Namespace
#visit org.osgi.resource.Namespace.CAPABILITY_USES_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.CAPABILITY_EFFECTIVE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.REQUIREMENT_FILTER_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.REQUIREMENT_RESOLUTION_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.RESOLUTION_MANDATORY
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.RESOLUTION_OPTIONAL
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.REQUIREMENT_EFFECTIVE_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.EFFECTIVE_RESOLVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.EFFECTIVE_ACTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.REQUIREMENT_CARDINALITY_DIRECTIVE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.CARDINALITY_MULTIPLE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.CARDINALITY_SINGLE
       Ljava/lang/String;
#visit org.osgi.resource.Namespace.&amp;lt;init&amp;gt;
       ()V
#Checking class: org.osgi.resource.Requirement
#visit
       org.osgi.resource.Requirement.getNamespace ()Ljava/lang/String;
      
#visit org.osgi.resource.Requirement.getDirectives ()Ljava/util/Map;
      
#visit org.osgi.resource.Requirement.getAttributes ()Ljava/util/Map;
      
#visit org.osgi.resource.Requirement.getResource ()Lorg/osgi/resource/Resource;
      
#visit org.osgi.resource.Requirement.equals (Ljava/lang/Object;)Z
      
#visit org.osgi.resource.Requirement.hashCode ()I
#Checking
       class: org.osgi.resource.Resource
#visit org.osgi.resource.Resource.getCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Resource.getRequirements
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Resource.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.resource.Resource.hashCode
       ()I
#Checking class: org.osgi.resource.Wire
#visit org.osgi.resource.Wire.getCapability
       ()Lorg/osgi/resource/Capability;
#visit org.osgi.resource.Wire.getRequirement
       ()Lorg/osgi/resource/Requirement;
#visit org.osgi.resource.Wire.getProvider
       ()Lorg/osgi/resource/Resource;
#visit org.osgi.resource.Wire.getRequirer
       ()Lorg/osgi/resource/Resource;
#visit org.osgi.resource.Wire.equals
       (Ljava/lang/Object;)Z
#visit org.osgi.resource.Wire.hashCode
       ()I
#Checking class: org.osgi.resource.Wiring
#visit org.osgi.resource.Wiring.getResourceCapabilities
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Wiring.getResourceRequirements
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Wiring.getProvidedResourceWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Wiring.getRequiredResourceWires
       (Ljava/lang/String;)Ljava/util/List;
#visit org.osgi.resource.Wiring.getResource
       ()Lorg/osgi/resource/Resource;
    </system-out>
  </testcase>
  <testcase name='testInitialBundleStartLevel' time='0.159' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testStartOrder' time='2.164' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testSetStartLevel' time='0.87' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testSetBundleStartLevel' time='4.180' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testPersistentlyStarted' time='0.100' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testSystemBundle' time='0.1' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testExceptionInActivator' time='0.92' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'>
    <system-out>
      ERROR: Bundle org.osgi.test.cases.framework.startlevel.tb5
       [482] Error stopping bundle. (java.lang.Exception)
ERROR:
       Bundle org.osgi.test.cases.framework.startlevel.tb5 [482]
       Error stopping bundle://2.0:0/startlevel.tb5.jar (org.osgi.framework.BundleException:
       Activator stop error in bundle org.osgi.test.cases.framework.startlevel.tb5
       [482].)
ERROR: Bundle org.osgi.test.cases.framework.startlevel.tb5
       [482] Error stopping bundle. (java.lang.Exception)
ERROR:
       Bundle org.osgi.test.cases.framework.startlevel.tb5 [482]
       Error starting/stopping bundle. (org.osgi.framework.BundleException:
       Activator stop error in bundle org.osgi.test.cases.framework.startlevel.tb5
       [482].)
    </system-out>
    <system-err>
      java.lang.Exception
	at org.osgi.test.cases.framework.startlevel.tb5.Activator.stop(Activator.java:39)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1315)
      
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
      
	at java.lang.Thread.run(Thread.java:695)
java.lang.Exception
      
	at org.osgi.test.cases.framework.startlevel.tb5.Activator.stop(Activator.java:39)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1315)
      
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:304)
      
	at java.lang.Thread.run(Thread.java:695)
java.lang.Exception
      
	at org.osgi.test.cases.framework.startlevel.tb5.Activator.stop(Activator.java:39)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.Felix.setBundleStartLevel(Felix.java:1500)
      
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:334)
      
	at java.lang.Thread.run(Thread.java:695)
java.lang.Exception
      
	at org.osgi.test.cases.framework.startlevel.tb5.Activator.stop(Activator.java:39)
      
	at org.apache.felix.framework.util.SecureAction.stopActivator(SecureAction.java:667)
      
	at org.apache.felix.framework.Felix.stopBundle(Felix.java:2536)
      
	at org.apache.felix.framework.Felix.setBundleStartLevel(Felix.java:1500)
      
	at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:334)
      
	at java.lang.Thread.run(Thread.java:695)
    </system-err>
  </testcase>
  <testcase name='testActivatorChangeBundleStartLevel' time='0.61' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testActivatorChangeStartLevel' time='0.87' classname='org.osgi.test.cases.framework.junit.startlevel.StartLevelControl'/>
  <testcase name='testListenerOrdering' time='10.113' classname='org.osgi.test.cases.framework.junit.syncbundlelistener.SyncBundleListenerTests'/>
  <testcase name='testConstructors' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testConstructorsBadArguments' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testEquals' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testHashCode' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testGetLeftType' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testGetLeft' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testGetRight' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testGetRightType' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testIsEmpty' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testIsExact' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testToString' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testIncludes' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testFilterString' time='0.4' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testFilterStringBadArguments' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testIntersection' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionRangeTests'/>
  <testcase name='testConstructors' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testConstructorsBadArguments' time='0.1' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testEquals' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testHashCode' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testToString' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testGetMajor' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testGetMinor' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testGetMicro' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testGetQualifier' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testCompareTo' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testConstantsValues' time='0.0' classname='org.osgi.test.cases.framework.junit.version.VersionTests'/>
  <testcase name='testRequireCapabilityRequirementAttributes' time='0.96' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testOsgiWiringHostCapabilityAttributes' time='0.81' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testOsgiWiringRequirementAttributes' time='0.93' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testOsgiWiringRequirementFilter' time='0.110' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testRequireCapabilityRequirementDirectives' time='0.91' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testOsgiWiringRequirementDirectives' time='0.109' classname='org.osgi.test.cases.framework.junit.wiring.Bug1922Test'/>
  <testcase name='testGetRevision' time='0.297' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testGetWiring' time='0.373' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testGetRevisions' time='0.437' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testOSGiEE' time='0.265' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testRequiredExecutionEnvironment' time='0.313' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testOptionalRequireCapability' time='0.111' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testListResources' time='0.460' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testBSNMatchingAttributes' time='0.547' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testProvidedWiresOrdering' time='0.217' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testDynamicImportPackage' time='0.163' classname='org.osgi.test.cases.framework.junit.wiring.BundleWiringTests'/>
  <testcase name='testEqualsHashCode' time='0.104' classname='org.osgi.test.cases.framework.junit.wiring.EqualsHashCodeTests'/>
  <testcase name='testRefreshListeners' time='0.278' classname='org.osgi.test.cases.framework.junit.wiring.FrameworkWiringTests'/>
  <testcase name='testResolveBundles' time='0.276' classname='org.osgi.test.cases.framework.junit.wiring.FrameworkWiringTests'/>
  <testcase name='testDependencyClosure' time='0.254' classname='org.osgi.test.cases.framework.junit.wiring.FrameworkWiringTests'/>
  <testcase name='testRemovalPending' time='0.265' classname='org.osgi.test.cases.framework.junit.wiring.FrameworkWiringTests'/>
</testsuite>